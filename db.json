{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"0f428c314b39a2e2845ebcf1510f2195a247ee78","modified":1633061505033},{"_id":"source/.DS_Store","hash":"1ee0921ba2982441ba114bc487f920096b79e701","modified":1633234387886},{"_id":"source/_posts/.DS_Store","hash":"3abccde05d239f26bd950808be0c55dcf986a1ee","modified":1633535542773},{"_id":"source/tags/index.md","hash":"ef1ea70280c9e8ec89b014f077a855d1f40caca6","modified":1633620670415},{"_id":"source/_posts/2021/.Ulysses-Settings.plist","hash":"6889ae2a1ab8ef99afbf8fa54c4cfb7104161b39","modified":1633620670410},{"_id":"source/_posts/2021/10/.Ulysses-Group.plist","hash":"f9e2f00e7e578fd3be3d5adf35808953fee65b56","modified":1633620670410},{"_id":"source/categories/index.md","hash":"8fe8a52a21f25a5024a31e9befcedb0c6e2cbfcc","modified":1633620670414},{"_id":"source/_posts/2021/10/概念集.md","hash":"5ccd0b806681a8696795518962a82d36967d82fc","modified":1633620670411},{"_id":"source/_posts/2021/10/致无法忘怀和终将忘却的.md","hash":"2e8d7329f9e73a8e473d49593bc8da461d7e82c7","modified":1633620885804},{"_id":"source/_posts/2021/9/hello-world.md","hash":"a030741457fd8b048a4ea2a011d954483e055b26","modified":1633620670439},{"_id":"source/_posts/2021/10/数据结构与算法-课程笔记.md","hash":"c0b7ce644694f3a20f9e745dff24e87c927518cd","modified":1633620670411},{"_id":"source/_posts/2021/9/my-new-article.md","hash":"d7e6f0b0b03d5b747dd60379dfe23df666abdbfa","modified":1633620670439},{"_id":"source/_posts/2021/.DS_Store","hash":"da3a58004e017eb77db129df87598af2ee8074f8","modified":1633234462790},{"_id":"source/_posts/2021/10/.DS_Store","hash":"2a63f11cd3e6b9065dc33bf027bb1dd0629f058e","modified":1633604084491},{"_id":"themes/next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1632924236557},{"_id":"themes/next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1632924236555},{"_id":"themes/next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1632924236557},{"_id":"themes/next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1632924236555},{"_id":"themes/next/_config.yml","hash":"ed2229d3de296c5c6256dda25a616061be5405e8","modified":1633620670439},{"_id":"themes/next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1632924236557},{"_id":"themes/next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1632924236555},{"_id":"themes/next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1632924236566},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1632924236556},{"_id":"themes/next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1632924236557},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1632924236556},{"_id":"themes/next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1632924236556},{"_id":"themes/next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1632924236555},{"_id":"themes/next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1632924236556},{"_id":"themes/next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1632924236559},{"_id":"themes/next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1632924236556},{"_id":"themes/next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1632924236556},{"_id":"themes/next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1632924236556},{"_id":"themes/next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1632924236557},{"_id":"themes/next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1632924236556},{"_id":"themes/next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1632924236556},{"_id":"themes/next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1632924236557},{"_id":"themes/next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1632924236557},{"_id":"themes/next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1632924236558},{"_id":"themes/next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1632924236558},{"_id":"themes/next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1632924236558},{"_id":"themes/next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1632924236558},{"_id":"themes/next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1632924236558},{"_id":"themes/next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1632924236558},{"_id":"themes/next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1632924236558},{"_id":"themes/next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1632924236559},{"_id":"themes/next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1632924236559},{"_id":"themes/next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1632924236559},{"_id":"themes/next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1632924236560},{"_id":"themes/next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1632924236560},{"_id":"themes/next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1632924236559},{"_id":"themes/next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1632924236560},{"_id":"themes/next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1632924236560},{"_id":"themes/next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1632924236560},{"_id":"themes/next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1632924236560},{"_id":"themes/next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1632924236560},{"_id":"themes/next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1632924236560},{"_id":"themes/next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1632924236560},{"_id":"themes/next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1632924236560},{"_id":"themes/next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1632924236560},{"_id":"themes/next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1632924236560},{"_id":"themes/next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1632924236561},{"_id":"themes/next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1632924236560},{"_id":"themes/next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1632924236561},{"_id":"themes/next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1632924236561},{"_id":"themes/next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1632924236561},{"_id":"themes/next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1632924236561},{"_id":"themes/next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1632924236566},{"_id":"themes/next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1632924236565},{"_id":"themes/next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1632924236566},{"_id":"themes/next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1632924236566},{"_id":"themes/next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1632924236567},{"_id":"themes/next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1632924236566},{"_id":"themes/next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1632924236566},{"_id":"themes/next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1632924236560},{"_id":"themes/next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1632924236556},{"_id":"themes/next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1632924236556},{"_id":"themes/next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1632924236556},{"_id":"themes/next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1632924236556},{"_id":"themes/next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1632924236558},{"_id":"themes/next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1632924236558},{"_id":"themes/next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1632924236558},{"_id":"themes/next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1632924236558},{"_id":"themes/next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1632924236558},{"_id":"themes/next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1632924236558},{"_id":"themes/next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1632924236559},{"_id":"themes/next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1632924236559},{"_id":"themes/next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1632924236559},{"_id":"themes/next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1632924236559},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1632924236561},{"_id":"themes/next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1632924236559},{"_id":"themes/next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1632924236561},{"_id":"themes/next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1632924236559},{"_id":"themes/next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1632924236559},{"_id":"themes/next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1632924236561},{"_id":"themes/next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1632924236561},{"_id":"themes/next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1632924236562},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1632924236562},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1632924236561},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1632924236563},{"_id":"themes/next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1632924236563},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1632924236563},{"_id":"themes/next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1632924236563},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1632924236563},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1632924236564},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1632924236565},{"_id":"themes/next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1632924236566},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1632924236567},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1632924236567},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1632924236565},{"_id":"themes/next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1632924236567},{"_id":"themes/next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1632924236567},{"_id":"themes/next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1632924236567},{"_id":"themes/next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1632924236567},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1632924236567},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1632924236567},{"_id":"themes/next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1632924236567},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1632924236567},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1632924236567},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1632924236567},{"_id":"themes/next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1632924236568},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1632924236568},{"_id":"themes/next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1632924236568},{"_id":"themes/next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1632924236568},{"_id":"themes/next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1632924236568},{"_id":"themes/next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1632924236568},{"_id":"themes/next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1632924236564},{"_id":"themes/next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1632924236567},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1632924236563},{"_id":"themes/next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1632924236574},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1632924236575},{"_id":"themes/next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1632924236568},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1632924236575},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1632924236575},{"_id":"themes/next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1632924236572},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1632924236575},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1632924236575},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1632924236575},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1632924236575},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1632924236575},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1632924236575},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1632924236576},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1632924236575},{"_id":"themes/next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1632924236576},{"_id":"themes/next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1632924236576},{"_id":"themes/next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1632924236576},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1632924236575},{"_id":"themes/next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1632924236576},{"_id":"themes/next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1632924236576},{"_id":"themes/next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1632924236576},{"_id":"themes/next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1632924236576},{"_id":"themes/next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1632924236576},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1632924236561},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1632924236562},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1632924236562},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1632924236562},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1632924236561},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1632924236562},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1632924236562},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1632924236562},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1632924236562},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1632924236562},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1632924236562},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1632924236562},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1632924236562},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1632924236562},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1632924236563},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1632924236563},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1632924236563},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1632924236563},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1632924236563},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1632924236563},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1632924236563},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1632924236563},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1632924236563},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1632924236564},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1632924236564},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1632924236564},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1632924236564},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1632924236564},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1632924236564},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1632924236564},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1632924236564},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1632924236565},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1632924236565},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1632924236565},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1632924236565},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1632924236565},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1632924236565},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1632924236565},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1632924236565},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1632924236565},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1632924236565},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1632924236565},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1632924236566},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1632924236565},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1632924236566},{"_id":"themes/next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1632924236566},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1632924236567},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1632924236574},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1632924236574},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1632924236574},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1632924236567},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1632924236574},{"_id":"themes/next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1632924236574},{"_id":"themes/next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1632924236576},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1632924236576},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1632924236577},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1632924236568},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1632924236568},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1632924236577},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1632924236568},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1632924236570},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1632924236570},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1632924236571},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1632924236569},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1632924236572},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1632924236573},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1632924236572},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1632924236574},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1632924236574},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1632924236574},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1632924236574},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1632924236573},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1632924236577},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1632924236573},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1632924236574},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1632924236568},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1632924236568},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1632924236577},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1632924236568},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1632924236568},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1632924236568},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1632924236570},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1632924236570},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1632924236569},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1632924236569},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1632924236570},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1632924236571},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1632924236571},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1632924236572},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1632924236572},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1632924236577},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1632924236577},{"_id":"public/sitemap.xml","hash":"06d9324cdedb3784685f37eb9dee1606ede8ac91","modified":1633621353671},{"_id":"public/atom.xml","hash":"2a03bae8776e3eba0e3aee84651cad9b99236c80","modified":1633621353671},{"_id":"public/tags/index.html","hash":"c6255094cd32976f19d9e4735bd6256c5e089b47","modified":1633621353671},{"_id":"public/categories/index.html","hash":"b884e551d794e077374549dbc33ff8a577bd8273","modified":1633621353671},{"_id":"public/archives/index.html","hash":"8481421aaa98437c0f7374b066265d47414309ac","modified":1633621353671},{"_id":"public/archives/2021/index.html","hash":"3dda034671d57dfac219a3490bd93b5ccc87b1b6","modified":1633621353671},{"_id":"public/archives/2021/10/index.html","hash":"ee6e45b873ba84a25f68886f45e8d617ac2003f6","modified":1633621353671},{"_id":"public/archives/2021/09/index.html","hash":"cd118ef0b9d1e27bcfc3995880e568b69fec38a3","modified":1633621353671},{"_id":"public/tags/Day-day-up/index.html","hash":"78f31a6afd041b413f1ff2b07f41b4b62e37120f","modified":1633621353671},{"_id":"public/tags/A-bored-begining/index.html","hash":"5d9e9062a67748d5d283e9ff542ba82294f316e6","modified":1633621353671},{"_id":"public/tags/少年少女的日记/index.html","hash":"2480e781d7e2bb94d144d45234ae3939856b15ee","modified":1633621353671},{"_id":"public/categories/笔记/index.html","hash":"6acd86b0c607c60528e99caec55fc1e68fcf6bbb","modified":1633621353671},{"_id":"public/categories/概念集/index.html","hash":"6e8ff1aac0ee7793c9ae8b78db1fa2ac1c12812b","modified":1633621353671},{"_id":"public/categories/编程/index.html","hash":"7026e89cdd786adcafb2d4565ec5ce79c55c1558","modified":1633621353671},{"_id":"public/categories/笔记/数据结构与算法/index.html","hash":"953c610b95cf503c7b470d71e02f0e457b990936","modified":1633621353671},{"_id":"public/categories/概念集/数据结构与算法/index.html","hash":"ce240d0b59524e17e846d2cfe22e31447750fb41","modified":1633621353671},{"_id":"public/categories/编程/hexo-配置手册/index.html","hash":"3e61d9839c7ad68d284f354ca14bb562d5843a0e","modified":1633621353671},{"_id":"public/2021/10/致无法忘怀和终将忘却的/index.html","hash":"28c4f70eb7f5d678cd98fac4542b9ea8f3cc493b","modified":1633621353671},{"_id":"public/2021/10/数据结构与算法-课程笔记/index.html","hash":"5a4dcb76814acc5d0ecbc5b05c735515b1cb1f63","modified":1633621353671},{"_id":"public/2021/10/概念集/index.html","hash":"16f26e66e9d2cd75b2aa0072631816769eb811b9","modified":1633621353671},{"_id":"public/2021/09/2021-9-my-new-article/index.html","hash":"1ee3ae636a6979a314182005f4b4adcf9c955635","modified":1633621353671},{"_id":"public/2021/09/2021-9-hello-world/index.html","hash":"a0d3087131312c04dda3af7bb86a83188a1ce8cd","modified":1633621353671},{"_id":"public/index.html","hash":"94f899b0289cb77c4b2b15bc0f8585e32f61b505","modified":1633621353671},{"_id":"public/CNAME","hash":"0f428c314b39a2e2845ebcf1510f2195a247ee78","modified":1633621353671},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1633621353671},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1633621353671},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1633621353671},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1633621353671},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1633621353671},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1633621353671},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1633621353671},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1633621353671},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1633621353671},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1633621353671},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1633621353671},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1633621353671},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1633621353671},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1633621353671},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1633621353671},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1633621353671},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1633621353671},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1633621353671},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1633621353671},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1633621353671},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1633621353671},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1633621353671},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1633621353671},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1633621353671},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1633621353671},{"_id":"public/css/main.css","hash":"0e14a8dec55e3887d1db4820ebd8d9e2cb1be243","modified":1633621353671},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1633621353671},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1633621353671},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1633621353671}],"Category":[{"name":"笔记","_id":"ckuh3z41w0004bc4d45c977to"},{"name":"概念集","_id":"ckuh3z41z0009bc4d69l5gz1b"},{"name":"编程","_id":"ckuh3z420000dbc4dcjwe68vi"},{"name":"数据结构与算法","parent":"ckuh3z41w0004bc4d45c977to","_id":"ckuh3z420000gbc4d6149ai2d"},{"name":"数据结构与算法","parent":"ckuh3z41z0009bc4d69l5gz1b","_id":"ckuh3z421000ibc4d2akyaz5c"},{"name":"hexo 配置手册","parent":"ckuh3z420000dbc4dcjwe68vi","_id":"ckuh3z422000lbc4dgrr62q4b"}],"Data":[],"Page":[{"title":"Collecting All Tags","date":"2021-09-29T16:08:19.000Z","type":"tags","layout":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: Collecting All Tags\ndate: 2021-09-30 00:08:19\ntype: \"tags\"\nlayout: \"tags\"\ncomments: false\n---\n","updated":"2021-10-07T15:31:10.415Z","path":"tags/index.html","_id":"ckuh3z41s0000bc4d01p1evl7","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"Birds of a feather flock together","date":"2021-09-29T16:08:31.000Z","type":"categories","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: Birds of a feather flock together\ndate: 2021-09-30 00:08:31\ntype: \"categories\"\nlayout: \"categories\"\ncomments: false\n---\n","updated":"2021-10-07T15:31:10.414Z","path":"categories/index.html","_id":"ckuh3z41v0002bc4d8iup7b3z","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"数据结构与算法-课程笔记","date":"2021-10-03T04:30:11.000Z","_content":"\n# 数据结构与算法\n\n## 什么是数据结构？\n\n要理解数据结构，首先从目的、功能的角度看。计算机要解决一个具体的问题，大致需要经过如下几个步骤：\n\n1. 分析问题，确定数据模型\n2. 设计相应的算法\n3. 编写程序，运行并调试，直至得到正确的结果\n\n这里提出了一个概念叫做 **数据模型** 。作为一个数学系应用数学专业的学生，我一个想到的是既然都叫做模型，那么数据模型和数学模型有什么异同呢？\n\n首先一个最令人困惑的问题是数学、数据，这两个词到底有什么区别？（我最近比较喜欢用这种分析语义语词的方式理解问题）。参考百度上的解释：\n\n- **数学** 作为学科，其目的在于研究数量、结构、变化、空间以及信息等概念。作为思维方法，是人类对事物的抽象结构与模式进行严格描述的一种通用手段。\n- *与其说是通用手段，不如说每每当人类将问题给抽象化，特征化，便无可避免地使用（亦或是发明）某种“数学”*。\n- **数据** 作为类，是指对客观事件进行记录并可以鉴别的符号，是对客观事物的逻辑归纳。数据经过加工和处理成为可被解读的信息。\n\n<!--more-->\n\n至此，我觉得可以给出一个更加清晰的定义：数学是对世界的抽象化，而数据是对世界的符号化。数学抽象的结果最终表现一整套的数学理论（由公理，命题和论证组成），而数据符号化的结构最终表现为符号以及符号之间关系构成的集合与现实世界的对应关系（如计算机中的二进制mp3文件和播放出来的声音之间的关系）。\n\n在这本数据结构的教材中，数据的定义更加切实，作者非常直接了当地指出：“**数据是描述客观事物的数和字符组成的集合**，是所有能够被输入到计算机中，且能够被计算机处理的符号的集合”。\n\n从数据作为集合的概念延展开来，我们不难理解数据集合中的元素称为 **数据项**，数据集合的子集称为 **数据对象**，数据集合上的关系称为 **数据结构** 。\n\n其中，数据项是保持数据所代表含义的独立性的最小单位，例如一名学生的学号为20192025xxx，不能再进一步拆分处理，否则便会丧失其具体的含义。\n\n数据对象是保持性质相同的数据元素共同构成的集合。所谓“性质”，一般指的是这个集合中的每个元素对应地描述了一类性质相同对象，而非是在说数据元素本身有什么性质。例如ASCII编码构成的数据对象共同描述了计算机可以表示的符号和形状。\n\n数据结构是数据集合上的关系。这样的关系往往是人们通过分析现实问题认为建构出来的，与数据本身取值多少可能没有必然联系。\n\n最后一点，是数据结构的层次问题。通常来讲，数据结构包含着两方面的层次，分别是逻辑结构和存储结构，以刻画数据含义之间的逻辑关系（与具体的问题有关）和数据在计算机电子构件中的存储表示及其关系。任何对数据结构的改动，从某种意义上讲，都可以被称之为数据的 **运算**，由于数据结构的不同层次，运算既可以是更改数据在计算机中的存储关系的各种操作，也可以是对现实事物之间关系的刻画。\n\n### 逻辑结构及其表示\n\n在现实世界中数据元素之间关系是多种多样的，但在数据结构中主要讨论数据之间的相邻关系或者邻接关系。\n\n#### 逻辑结构的分类\n\n按类型划分，我们对数据的逻辑结构作归纳，无外乎如下几类：\n\n1.**集合**\n: 集合是指数据元素之间除了属于同一个集合的关系之外，再没有其他关系的集合。\n\n2.**线性结构**\n: 线性结构(linear structure)是指该结构中的数据元素之间存在一对一的关系。其特点是除了唯二两个起点和终点仅有一个唯一的前驱（或后继）以外，其余的每一个数据元素均各有一个前驱元素和后继元素。\n\n3.**树形结构**\n: 树形结构是指该结构中的数据元素存在一对多的关系，除了为唯一一个顶点没有前驱元素，以及树叶节点没有后继元素外，其余每一d个数据元素均有一个前驱元素以及至少一个后继元素。\n\n4.**图形结构** \n: 图形结构是指该结构中数据元素之间存在多对多的关系，每个数据元素的前驱和后继的个数可以使任意的。\n\n#### 逻辑结构的表示\n\n（1） 图表表示\n: 图表表示就是直接按顺序编号，把数据项在一张表格中列出来。例如：\n\n| 学号 | 姓名 | 性别 |\n|:----:|:----:|:----:|\n|   1  | 张斌 |  男  |\n|   8  | 刘丽 |  女  |\n|  34  | 李英 |  女  |\n|  20  | 陈华 |  男  |\n\n（2） 集合（二元组）表示\n: 我们称一个元素集合和一个关系二元关系集合构成一个逻辑结构的二元组，一个二元组的表示如下：\n\n$B=(D,R)$\n\n其中，$D$ 为数据项构成的集合，$R$ 为$D$ 上的二元关系集合。\n\n$D=\\{d\\_i | 1 \\le i \\le n, n \\ge 0 \\}$ \n\n$R = \\{r\\_j | 1 \\le j \\le m, m \\ge 0 \\}$ \n\n$d\\_i$ 表示集合 $D$ 中的第 i 个元素，$n$ 为$D$ 中元素的个数。$r\\_i$ 表示集合 $D$ 中的第i种关系，$m$ 为$R$ 中的关系个数。对于关系集合$r\\_i$ 来说，集合中的每一个元素为 $\\<x,y\\>, x,y \\in D$ 代表元素x\n与元素y之间存在相邻关系（\\<前驱，后继\\>）。\n\n（3）图形表示\n: 简单地用一个圆圈+数字来表示节点，用箭头来表示相邻关系。可以做出如下的图形\n\n![20211003][image-1]\n\n其二元组表示为：\n\n$$ \\begin{aligned}\n& B = \\{ 25, 36, 48, 57, 64, 82, 75 \\} \\\\ \n& D = \\{ r\\_1, r\\_2 \\} \\\\\n& r\\_1 = \\{ \\<48,25\\>, \\<25,36\\>, \\<48,64\\>, \\<64,57\\>, \\<64,82\\>, \\<82,75\\> \\}\\\\\n& r\\_2 = \\{ \\<25,36\\>, \\<36,48\\>, \\<48,57\\>, \\<57,64\\>, \\<64,75\\>, \\<74,82\\> \\} \n\\end{aligned} $$\n\n### 存储结构\n\n在实际应用中，数据结构的存储方法是灵活多样的，归纳起来，数据结构中有以下4中常用的存储结构类型。\n\n#### 顺序存储结构\n\n顺序存储结构（sequential storage structure）是采用一组连续的存储单元存放所有的数据元素。数据元素不仅在逻辑结构中相邻，由于顺序存储的方式，其在存储其中的存储位置也相邻。\n\n*优点*：存储效率高，可以实现对元素的随机存取。\n\n*缺点*：不便于数据修改，对元素的插入和删除操作可能需要移动一系列的元素。\n\n#### 链式存储结构\n\n在链式存储结构（linked storge structure）中，每个逻辑元素单独分配一个内存节点，所有节点的内存地址是间断的，通过每个节点的附加指针连接起来，最终将所有的逻辑元素链接起来。\n\n*优点* ：方便数据修改（只需要修改前后节点的指针）。\n\n*缺点* ：不能对存储节点进行随机存取，存储效率相比顺序存储减半。\n\n#### 索引存储结构\n\n索引存储结构（indexed storge structure）是指在存储元素信息的同时还建立附加的索引表。索引表中每一项称为索引项，其一般形式为“关键字，地址”，关键词用于标识某个特定元素，地址用于记录该元素的内存地址。通常为了便于查询，索引表中所有索引项是按关键字有序排列的。\n\n*优点* ：查找效率高\n\n*缺点* ：建立了索引表，增加了空间开销\n\n#### 哈系（或散列）存储结构\n\n哈系存储结构（hashed storge structure）的基本思想是根据元素的关键字通过哈系函数直接计算出一个值，并将这个值作为该元素的存储地址。\n\n*优点* ：查找速度快，能够对元素进行快速的查找和插入\n\n*缺点* ：只存储元素的数据，不存储元素之间的逻辑关系（没有简便的方法以任何一种顺序遍历表中的数据项)；基于数组的哈系表，不便于扩展，在数组基本被填满后性能下降得非常严重\n\n### 数据运算\n\n数据运算是指对数据实施的操作。每种数据结构都有一组相应的运算，最常用的运算有检索、插入、删除、更新和排序等。数据运算最终需要在对应的存储结构上以特定的算法实现。\n\n值得注意的一点是，运算的定义是基于逻辑结构层面，出于人们对解决现实问题的需要抽象出来的特定功能或者方法。运算的实现是基于存储结构层面，是依靠算法对具体的存储单元进行编程操作实现的。\n\n运算之所有被分为这两种层面，我想，一方面虽然按书上说的“体现了软件工程的思想”，另一方面也导致了程序用户和程序员之间的分裂，使得一般的用户无法接触到程序内部的细节，只能被动地使用程序定义好的功能，而不能主动地凭自己的意见作修改。如果有那么一天，现实计算机的存储方式能够更加适合人类看待问题的方式，在迎合逻辑结构的同时，不再需要结构复杂的算法（才能保证稳定和效率）就能解决所有的问题，那么这里运算的两种层次的分裂将为被弥合。我想，届时人类可以利用计算机做到更多有趣的事情？\n\n### 数据类型和抽象数据类型\n\n这一部分还是自己在实践中掌握比较好\n\n## 算法及其描述\n\n### 什么是算法？\n\n算法（algorithm）是对特定问题求解步骤的一种描述，它是指令有限的序列。其中每条指令代表计算机的一个或者多个操作。\n\n一个算法应该具有一下5中重要的特性：\n\n1. 有穷性：一个算法必须在有限步骤内完成。\n2. 确定性：对于每种情况执行的操作的都是确定的，即使说相同的输入总应该有同样的输出。\n3. 可行性：算法可以通过计算机基本操作的有限次组合来完成，否则计算机无法实现。\n4. 有输入：作为算法加工对象的量值，通常体现为一组变量，这是不可或缺的（可能程序员可以不要求任何变量的输入，但一个算法总是有特定加工处理的对象，比如void函数体内部的变量）。\n5. 有输出：作为算法对信息进行处理加工后的结构，一个算法有一个或者多个输出。\n\n*算法输入和输出的特定关系构成了算法的功能*.\n\n### 算法设计的目标\n\n1. 正确性：算法能够正确地执行预先设定的功能和性能要求。这是最最基本的要求。\n2. 可实用性：要求程序能够方便地被使用，也称为用户友好性。\n3. 可读性：算法应该易于理解，这要求的算法的逻辑必须是清晰的、简单的和结构化的。\n4. 健壮性：要求算法具有较好的容错性，即提供异常处理。\n5. 高性能和低存储需求：要求尽可能节省算法时间和空间的开销。\n\n### 算法描述\n\n简单介绍一下应该是有5种方法，可以用来描述一个确定的算法：\n\n1. 自然语言：可以直接以通俗形象的语言来描述算法，尽管会丧失一定的严谨准确性。\n2. 流程图：适合顺序、循环结构的算法，不是具有递归结构的算法\n3. 伪代码：结合自然语言和程序语言，比较容易理解。\n4. 程序语言：最直接的描述方法\n5. 调用流程：以程序中函数为单位来描述算法的方法，适合一些复杂工程，也可以用来分析递归算法的成效。\n\n## 算法分析\n\n### 什么是算法分析？\n\n算法分析就是分析算法占用计算机资源的多少。而计算机资源主要是CPU时间和内存空间，因此算法分析又分为时间性能分析和空间性能分析。\n\n### 算法时间性能分析\n\n一般来说，有两种衡量算法时间性能的方法，即事后统计法和事前估计法。（按字面意思就很好理解）\n\n而在设计算法的过程最常用的是事前估计的方法，一般我们称之为算法的时间复杂度分析。\n\n算法的时间复杂度分析一般分为两步（熟练的Oier大概可以之间看出来，\n不过对于涉及递归的算法，分析起来可能有一些困难）：第一步，首先，假设算法的问题规模为n，以程序的每一条语句为单位，为不同类型的语句设定一个耗时量，考虑每条语句的运行次数，最后将这些时间统计起来。如果追求精细，可以了解一下C/C++语言运行赋值语句，声明语句，运算语句的耗时（例如：`getchar()`, `printf()`, `cin`这三类输入语句其实有很大的性能差距，很多OIer为追求几十毫秒的性能，甚至会自己为程序写一个快速读入、输出函数来优化性能）。反之，如果仅仅是粗略分析一下，时间复杂度的量级，可以仅仅统计循环结构中的语句和执行次数并且不考虑不同语句的执行效率一视同仁地记为单位1即可。\n\n第二步是将计算得到的时间函数 $T(N)$ 进一步略去其低阶项和常数，仅考虑时间增长趋势的一个上界。例如：$T(n) = 2n^2 + 2n + 1$ 这是我们可以直接取为 $O(n^2)$ 。（$O(f(x))$ 是同阶无穷大的意思）\n\n### 算法的空间性能分析\n\n这部分由于书上介绍的比较简单，我也不想再过多介绍。一般，只要熟悉了程序中各个变量的生命（什么时候获取空间，什么时候释放空间），就足够分析清楚算法的空间复杂度了。\n\n## 数据结构+算法=程序\n\n- [在本书中提到的概念][1]\n\n\n[1]:\t/2021/10/1238/index.html\n\n[image-1]:\thttps://picofwwzy-1307689287.cos.ap-shanghai.myqcloud.com/uPic/20211003.png","source":"_posts/2021/10/数据结构与算法-课程笔记.md","raw":"---\ntitle: 数据结构与算法-课程笔记\ndate: 2021-10-03 12:30:11\ncategories:\n  - 笔记\n  - 数据结构与算法\ntags:\n  - Day day up\n---\n\n# 数据结构与算法\n\n## 什么是数据结构？\n\n要理解数据结构，首先从目的、功能的角度看。计算机要解决一个具体的问题，大致需要经过如下几个步骤：\n\n1. 分析问题，确定数据模型\n2. 设计相应的算法\n3. 编写程序，运行并调试，直至得到正确的结果\n\n这里提出了一个概念叫做 **数据模型** 。作为一个数学系应用数学专业的学生，我一个想到的是既然都叫做模型，那么数据模型和数学模型有什么异同呢？\n\n首先一个最令人困惑的问题是数学、数据，这两个词到底有什么区别？（我最近比较喜欢用这种分析语义语词的方式理解问题）。参考百度上的解释：\n\n- **数学** 作为学科，其目的在于研究数量、结构、变化、空间以及信息等概念。作为思维方法，是人类对事物的抽象结构与模式进行严格描述的一种通用手段。\n- *与其说是通用手段，不如说每每当人类将问题给抽象化，特征化，便无可避免地使用（亦或是发明）某种“数学”*。\n- **数据** 作为类，是指对客观事件进行记录并可以鉴别的符号，是对客观事物的逻辑归纳。数据经过加工和处理成为可被解读的信息。\n\n<!--more-->\n\n至此，我觉得可以给出一个更加清晰的定义：数学是对世界的抽象化，而数据是对世界的符号化。数学抽象的结果最终表现一整套的数学理论（由公理，命题和论证组成），而数据符号化的结构最终表现为符号以及符号之间关系构成的集合与现实世界的对应关系（如计算机中的二进制mp3文件和播放出来的声音之间的关系）。\n\n在这本数据结构的教材中，数据的定义更加切实，作者非常直接了当地指出：“**数据是描述客观事物的数和字符组成的集合**，是所有能够被输入到计算机中，且能够被计算机处理的符号的集合”。\n\n从数据作为集合的概念延展开来，我们不难理解数据集合中的元素称为 **数据项**，数据集合的子集称为 **数据对象**，数据集合上的关系称为 **数据结构** 。\n\n其中，数据项是保持数据所代表含义的独立性的最小单位，例如一名学生的学号为20192025xxx，不能再进一步拆分处理，否则便会丧失其具体的含义。\n\n数据对象是保持性质相同的数据元素共同构成的集合。所谓“性质”，一般指的是这个集合中的每个元素对应地描述了一类性质相同对象，而非是在说数据元素本身有什么性质。例如ASCII编码构成的数据对象共同描述了计算机可以表示的符号和形状。\n\n数据结构是数据集合上的关系。这样的关系往往是人们通过分析现实问题认为建构出来的，与数据本身取值多少可能没有必然联系。\n\n最后一点，是数据结构的层次问题。通常来讲，数据结构包含着两方面的层次，分别是逻辑结构和存储结构，以刻画数据含义之间的逻辑关系（与具体的问题有关）和数据在计算机电子构件中的存储表示及其关系。任何对数据结构的改动，从某种意义上讲，都可以被称之为数据的 **运算**，由于数据结构的不同层次，运算既可以是更改数据在计算机中的存储关系的各种操作，也可以是对现实事物之间关系的刻画。\n\n### 逻辑结构及其表示\n\n在现实世界中数据元素之间关系是多种多样的，但在数据结构中主要讨论数据之间的相邻关系或者邻接关系。\n\n#### 逻辑结构的分类\n\n按类型划分，我们对数据的逻辑结构作归纳，无外乎如下几类：\n\n1.**集合**\n: 集合是指数据元素之间除了属于同一个集合的关系之外，再没有其他关系的集合。\n\n2.**线性结构**\n: 线性结构(linear structure)是指该结构中的数据元素之间存在一对一的关系。其特点是除了唯二两个起点和终点仅有一个唯一的前驱（或后继）以外，其余的每一个数据元素均各有一个前驱元素和后继元素。\n\n3.**树形结构**\n: 树形结构是指该结构中的数据元素存在一对多的关系，除了为唯一一个顶点没有前驱元素，以及树叶节点没有后继元素外，其余每一d个数据元素均有一个前驱元素以及至少一个后继元素。\n\n4.**图形结构** \n: 图形结构是指该结构中数据元素之间存在多对多的关系，每个数据元素的前驱和后继的个数可以使任意的。\n\n#### 逻辑结构的表示\n\n（1） 图表表示\n: 图表表示就是直接按顺序编号，把数据项在一张表格中列出来。例如：\n\n| 学号 | 姓名 | 性别 |\n|:----:|:----:|:----:|\n|   1  | 张斌 |  男  |\n|   8  | 刘丽 |  女  |\n|  34  | 李英 |  女  |\n|  20  | 陈华 |  男  |\n\n（2） 集合（二元组）表示\n: 我们称一个元素集合和一个关系二元关系集合构成一个逻辑结构的二元组，一个二元组的表示如下：\n\n$B=(D,R)$\n\n其中，$D$ 为数据项构成的集合，$R$ 为$D$ 上的二元关系集合。\n\n$D=\\{d\\_i | 1 \\le i \\le n, n \\ge 0 \\}$ \n\n$R = \\{r\\_j | 1 \\le j \\le m, m \\ge 0 \\}$ \n\n$d\\_i$ 表示集合 $D$ 中的第 i 个元素，$n$ 为$D$ 中元素的个数。$r\\_i$ 表示集合 $D$ 中的第i种关系，$m$ 为$R$ 中的关系个数。对于关系集合$r\\_i$ 来说，集合中的每一个元素为 $\\<x,y\\>, x,y \\in D$ 代表元素x\n与元素y之间存在相邻关系（\\<前驱，后继\\>）。\n\n（3）图形表示\n: 简单地用一个圆圈+数字来表示节点，用箭头来表示相邻关系。可以做出如下的图形\n\n![20211003][image-1]\n\n其二元组表示为：\n\n$$ \\begin{aligned}\n& B = \\{ 25, 36, 48, 57, 64, 82, 75 \\} \\\\ \n& D = \\{ r\\_1, r\\_2 \\} \\\\\n& r\\_1 = \\{ \\<48,25\\>, \\<25,36\\>, \\<48,64\\>, \\<64,57\\>, \\<64,82\\>, \\<82,75\\> \\}\\\\\n& r\\_2 = \\{ \\<25,36\\>, \\<36,48\\>, \\<48,57\\>, \\<57,64\\>, \\<64,75\\>, \\<74,82\\> \\} \n\\end{aligned} $$\n\n### 存储结构\n\n在实际应用中，数据结构的存储方法是灵活多样的，归纳起来，数据结构中有以下4中常用的存储结构类型。\n\n#### 顺序存储结构\n\n顺序存储结构（sequential storage structure）是采用一组连续的存储单元存放所有的数据元素。数据元素不仅在逻辑结构中相邻，由于顺序存储的方式，其在存储其中的存储位置也相邻。\n\n*优点*：存储效率高，可以实现对元素的随机存取。\n\n*缺点*：不便于数据修改，对元素的插入和删除操作可能需要移动一系列的元素。\n\n#### 链式存储结构\n\n在链式存储结构（linked storge structure）中，每个逻辑元素单独分配一个内存节点，所有节点的内存地址是间断的，通过每个节点的附加指针连接起来，最终将所有的逻辑元素链接起来。\n\n*优点* ：方便数据修改（只需要修改前后节点的指针）。\n\n*缺点* ：不能对存储节点进行随机存取，存储效率相比顺序存储减半。\n\n#### 索引存储结构\n\n索引存储结构（indexed storge structure）是指在存储元素信息的同时还建立附加的索引表。索引表中每一项称为索引项，其一般形式为“关键字，地址”，关键词用于标识某个特定元素，地址用于记录该元素的内存地址。通常为了便于查询，索引表中所有索引项是按关键字有序排列的。\n\n*优点* ：查找效率高\n\n*缺点* ：建立了索引表，增加了空间开销\n\n#### 哈系（或散列）存储结构\n\n哈系存储结构（hashed storge structure）的基本思想是根据元素的关键字通过哈系函数直接计算出一个值，并将这个值作为该元素的存储地址。\n\n*优点* ：查找速度快，能够对元素进行快速的查找和插入\n\n*缺点* ：只存储元素的数据，不存储元素之间的逻辑关系（没有简便的方法以任何一种顺序遍历表中的数据项)；基于数组的哈系表，不便于扩展，在数组基本被填满后性能下降得非常严重\n\n### 数据运算\n\n数据运算是指对数据实施的操作。每种数据结构都有一组相应的运算，最常用的运算有检索、插入、删除、更新和排序等。数据运算最终需要在对应的存储结构上以特定的算法实现。\n\n值得注意的一点是，运算的定义是基于逻辑结构层面，出于人们对解决现实问题的需要抽象出来的特定功能或者方法。运算的实现是基于存储结构层面，是依靠算法对具体的存储单元进行编程操作实现的。\n\n运算之所有被分为这两种层面，我想，一方面虽然按书上说的“体现了软件工程的思想”，另一方面也导致了程序用户和程序员之间的分裂，使得一般的用户无法接触到程序内部的细节，只能被动地使用程序定义好的功能，而不能主动地凭自己的意见作修改。如果有那么一天，现实计算机的存储方式能够更加适合人类看待问题的方式，在迎合逻辑结构的同时，不再需要结构复杂的算法（才能保证稳定和效率）就能解决所有的问题，那么这里运算的两种层次的分裂将为被弥合。我想，届时人类可以利用计算机做到更多有趣的事情？\n\n### 数据类型和抽象数据类型\n\n这一部分还是自己在实践中掌握比较好\n\n## 算法及其描述\n\n### 什么是算法？\n\n算法（algorithm）是对特定问题求解步骤的一种描述，它是指令有限的序列。其中每条指令代表计算机的一个或者多个操作。\n\n一个算法应该具有一下5中重要的特性：\n\n1. 有穷性：一个算法必须在有限步骤内完成。\n2. 确定性：对于每种情况执行的操作的都是确定的，即使说相同的输入总应该有同样的输出。\n3. 可行性：算法可以通过计算机基本操作的有限次组合来完成，否则计算机无法实现。\n4. 有输入：作为算法加工对象的量值，通常体现为一组变量，这是不可或缺的（可能程序员可以不要求任何变量的输入，但一个算法总是有特定加工处理的对象，比如void函数体内部的变量）。\n5. 有输出：作为算法对信息进行处理加工后的结构，一个算法有一个或者多个输出。\n\n*算法输入和输出的特定关系构成了算法的功能*.\n\n### 算法设计的目标\n\n1. 正确性：算法能够正确地执行预先设定的功能和性能要求。这是最最基本的要求。\n2. 可实用性：要求程序能够方便地被使用，也称为用户友好性。\n3. 可读性：算法应该易于理解，这要求的算法的逻辑必须是清晰的、简单的和结构化的。\n4. 健壮性：要求算法具有较好的容错性，即提供异常处理。\n5. 高性能和低存储需求：要求尽可能节省算法时间和空间的开销。\n\n### 算法描述\n\n简单介绍一下应该是有5种方法，可以用来描述一个确定的算法：\n\n1. 自然语言：可以直接以通俗形象的语言来描述算法，尽管会丧失一定的严谨准确性。\n2. 流程图：适合顺序、循环结构的算法，不是具有递归结构的算法\n3. 伪代码：结合自然语言和程序语言，比较容易理解。\n4. 程序语言：最直接的描述方法\n5. 调用流程：以程序中函数为单位来描述算法的方法，适合一些复杂工程，也可以用来分析递归算法的成效。\n\n## 算法分析\n\n### 什么是算法分析？\n\n算法分析就是分析算法占用计算机资源的多少。而计算机资源主要是CPU时间和内存空间，因此算法分析又分为时间性能分析和空间性能分析。\n\n### 算法时间性能分析\n\n一般来说，有两种衡量算法时间性能的方法，即事后统计法和事前估计法。（按字面意思就很好理解）\n\n而在设计算法的过程最常用的是事前估计的方法，一般我们称之为算法的时间复杂度分析。\n\n算法的时间复杂度分析一般分为两步（熟练的Oier大概可以之间看出来，\n不过对于涉及递归的算法，分析起来可能有一些困难）：第一步，首先，假设算法的问题规模为n，以程序的每一条语句为单位，为不同类型的语句设定一个耗时量，考虑每条语句的运行次数，最后将这些时间统计起来。如果追求精细，可以了解一下C/C++语言运行赋值语句，声明语句，运算语句的耗时（例如：`getchar()`, `printf()`, `cin`这三类输入语句其实有很大的性能差距，很多OIer为追求几十毫秒的性能，甚至会自己为程序写一个快速读入、输出函数来优化性能）。反之，如果仅仅是粗略分析一下，时间复杂度的量级，可以仅仅统计循环结构中的语句和执行次数并且不考虑不同语句的执行效率一视同仁地记为单位1即可。\n\n第二步是将计算得到的时间函数 $T(N)$ 进一步略去其低阶项和常数，仅考虑时间增长趋势的一个上界。例如：$T(n) = 2n^2 + 2n + 1$ 这是我们可以直接取为 $O(n^2)$ 。（$O(f(x))$ 是同阶无穷大的意思）\n\n### 算法的空间性能分析\n\n这部分由于书上介绍的比较简单，我也不想再过多介绍。一般，只要熟悉了程序中各个变量的生命（什么时候获取空间，什么时候释放空间），就足够分析清楚算法的空间复杂度了。\n\n## 数据结构+算法=程序\n\n- [在本书中提到的概念][1]\n\n\n[1]:\t/2021/10/1238/index.html\n\n[image-1]:\thttps://picofwwzy-1307689287.cos.ap-shanghai.myqcloud.com/uPic/20211003.png","slug":"数据结构与算法-课程笔记","published":1,"updated":"2021-10-07T15:31:10.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckuh3z41t0001bc4d97eedpfx","content":"<h1 id=\"数据结构与算法\"><a class=\"markdownIt-Anchor\" href=\"#数据结构与算法\"></a> 数据结构与算法</h1>\n<h2 id=\"什么是数据结构\"><a class=\"markdownIt-Anchor\" href=\"#什么是数据结构\"></a> 什么是数据结构？</h2>\n<p>要理解数据结构，首先从目的、功能的角度看。计算机要解决一个具体的问题，大致需要经过如下几个步骤：</p>\n<ol>\n<li>分析问题，确定数据模型</li>\n<li>设计相应的算法</li>\n<li>编写程序，运行并调试，直至得到正确的结果</li>\n</ol>\n<p>这里提出了一个概念叫做 <strong>数据模型</strong> 。作为一个数学系应用数学专业的学生，我一个想到的是既然都叫做模型，那么数据模型和数学模型有什么异同呢？</p>\n<p>首先一个最令人困惑的问题是数学、数据，这两个词到底有什么区别？（我最近比较喜欢用这种分析语义语词的方式理解问题）。参考百度上的解释：</p>\n<ul>\n<li><strong>数学</strong> 作为学科，其目的在于研究数量、结构、变化、空间以及信息等概念。作为思维方法，是人类对事物的抽象结构与模式进行严格描述的一种通用手段。</li>\n<li><em>与其说是通用手段，不如说每每当人类将问题给抽象化，特征化，便无可避免地使用（亦或是发明）某种“数学”</em>。</li>\n<li><strong>数据</strong> 作为类，是指对客观事件进行记录并可以鉴别的符号，是对客观事物的逻辑归纳。数据经过加工和处理成为可被解读的信息。</li>\n</ul>\n<span id=\"more\"></span>\n<p>至此，我觉得可以给出一个更加清晰的定义：数学是对世界的抽象化，而数据是对世界的符号化。数学抽象的结果最终表现一整套的数学理论（由公理，命题和论证组成），而数据符号化的结构最终表现为符号以及符号之间关系构成的集合与现实世界的对应关系（如计算机中的二进制mp3文件和播放出来的声音之间的关系）。</p>\n<p>在这本数据结构的教材中，数据的定义更加切实，作者非常直接了当地指出：“<strong>数据是描述客观事物的数和字符组成的集合</strong>，是所有能够被输入到计算机中，且能够被计算机处理的符号的集合”。</p>\n<p>从数据作为集合的概念延展开来，我们不难理解数据集合中的元素称为 <strong>数据项</strong>，数据集合的子集称为 <strong>数据对象</strong>，数据集合上的关系称为 <strong>数据结构</strong> 。</p>\n<p>其中，数据项是保持数据所代表含义的独立性的最小单位，例如一名学生的学号为20192025xxx，不能再进一步拆分处理，否则便会丧失其具体的含义。</p>\n<p>数据对象是保持性质相同的数据元素共同构成的集合。所谓“性质”，一般指的是这个集合中的每个元素对应地描述了一类性质相同对象，而非是在说数据元素本身有什么性质。例如ASCII编码构成的数据对象共同描述了计算机可以表示的符号和形状。</p>\n<p>数据结构是数据集合上的关系。这样的关系往往是人们通过分析现实问题认为建构出来的，与数据本身取值多少可能没有必然联系。</p>\n<p>最后一点，是数据结构的层次问题。通常来讲，数据结构包含着两方面的层次，分别是逻辑结构和存储结构，以刻画数据含义之间的逻辑关系（与具体的问题有关）和数据在计算机电子构件中的存储表示及其关系。任何对数据结构的改动，从某种意义上讲，都可以被称之为数据的 <strong>运算</strong>，由于数据结构的不同层次，运算既可以是更改数据在计算机中的存储关系的各种操作，也可以是对现实事物之间关系的刻画。</p>\n<h3 id=\"逻辑结构及其表示\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构及其表示\"></a> 逻辑结构及其表示</h3>\n<p>在现实世界中数据元素之间关系是多种多样的，但在数据结构中主要讨论数据之间的相邻关系或者邻接关系。</p>\n<h4 id=\"逻辑结构的分类\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构的分类\"></a> 逻辑结构的分类</h4>\n<p>按类型划分，我们对数据的逻辑结构作归纳，无外乎如下几类：</p>\n<dl>\n<dt>1.<strong>集合</strong></dt>\n<dd>集合是指数据元素之间除了属于同一个集合的关系之外，再没有其他关系的集合。</dd>\n<dt>2.<strong>线性结构</strong></dt>\n<dd>线性结构(linear structure)是指该结构中的数据元素之间存在一对一的关系。其特点是除了唯二两个起点和终点仅有一个唯一的前驱（或后继）以外，其余的每一个数据元素均各有一个前驱元素和后继元素。</dd>\n<dt>3.<strong>树形结构</strong></dt>\n<dd>树形结构是指该结构中的数据元素存在一对多的关系，除了为唯一一个顶点没有前驱元素，以及树叶节点没有后继元素外，其余每一d个数据元素均有一个前驱元素以及至少一个后继元素。</dd>\n<dt>4.<strong>图形结构</strong></dt>\n<dd>图形结构是指该结构中数据元素之间存在多对多的关系，每个数据元素的前驱和后继的个数可以使任意的。</dd>\n</dl>\n<h4 id=\"逻辑结构的表示\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构的表示\"></a> 逻辑结构的表示</h4>\n<dl>\n<dt>（1） 图表表示</dt>\n<dd>图表表示就是直接按顺序编号，把数据项在一张表格中列出来。例如：</dd>\n</dl>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:center\">姓名</th>\n<th style=\"text-align:center\">性别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">张斌</td>\n<td style=\"text-align:center\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">刘丽</td>\n<td style=\"text-align:center\">女</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">34</td>\n<td style=\"text-align:center\">李英</td>\n<td style=\"text-align:center\">女</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">陈华</td>\n<td style=\"text-align:center\">男</td>\n</tr>\n</tbody>\n</table>\n<dl>\n<dt>（2） 集合（二元组）表示</dt>\n<dd>我们称一个元素集合和一个关系二元关系集合构成一个逻辑结构的二元组，一个二元组的表示如下：</dd>\n</dl>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B=(D,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 为数据项构成的集合，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 上的二元关系集合。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">D=\\{d\\_i | 1 \\le i \\le n, n \\ge 0 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">R = \\{r\\_j | 1 \\le j \\le m, m \\ge 0 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">d\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00444em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 表示集合 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中的第 i 个元素，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中元素的个数。<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">r\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9695199999999999em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 表示集合 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中的第i种关系，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 中的关系个数。对于关系集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">r\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9695199999999999em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 来说，集合中的每一个元素为 \\<x,y\\>, x,y \\in D 代表元素x<br />\n与元素y之间存在相邻关系（&lt;前驱，后继&gt;）。</p>\n<dl>\n<dt>（3）图形表示</dt>\n<dd>简单地用一个圆圈+数字来表示节点，用箭头来表示相邻关系。可以做出如下的图形</dd>\n</dl>\n<p><img src=\"https://picofwwzy-1307689287.cos.ap-shanghai.myqcloud.com/uPic/20211003.png\" alt=\"20211003\" /></p>\n<p>其二元组表示为：</p>\n \\begin{aligned}\n& B = \\{ 25, 36, 48, 57, 64, 82, 75 \\} \\\\ \n& D = \\{ r\\_1, r\\_2 \\} \\\\\n& r\\_1 = \\{ \\<48,25\\>, \\<25,36\\>, \\<48,64\\>, \\<64,57\\>, \\<64,82\\>, \\<82,75\\> \\}\\\\\n& r\\_2 = \\{ \\<25,36\\>, \\<36,48\\>, \\<48,57\\>, \\<57,64\\>, \\<64,75\\>, \\<74,82\\> \\} \n\\end{aligned} \n<h3 id=\"存储结构\"><a class=\"markdownIt-Anchor\" href=\"#存储结构\"></a> 存储结构</h3>\n<p>在实际应用中，数据结构的存储方法是灵活多样的，归纳起来，数据结构中有以下4中常用的存储结构类型。</p>\n<h4 id=\"顺序存储结构\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储结构\"></a> 顺序存储结构</h4>\n<p>顺序存储结构（sequential storage structure）是采用一组连续的存储单元存放所有的数据元素。数据元素不仅在逻辑结构中相邻，由于顺序存储的方式，其在存储其中的存储位置也相邻。</p>\n<p><em>优点</em>：存储效率高，可以实现对元素的随机存取。</p>\n<p><em>缺点</em>：不便于数据修改，对元素的插入和删除操作可能需要移动一系列的元素。</p>\n<h4 id=\"链式存储结构\"><a class=\"markdownIt-Anchor\" href=\"#链式存储结构\"></a> 链式存储结构</h4>\n<p>在链式存储结构（linked storge structure）中，每个逻辑元素单独分配一个内存节点，所有节点的内存地址是间断的，通过每个节点的附加指针连接起来，最终将所有的逻辑元素链接起来。</p>\n<p><em>优点</em> ：方便数据修改（只需要修改前后节点的指针）。</p>\n<p><em>缺点</em> ：不能对存储节点进行随机存取，存储效率相比顺序存储减半。</p>\n<h4 id=\"索引存储结构\"><a class=\"markdownIt-Anchor\" href=\"#索引存储结构\"></a> 索引存储结构</h4>\n<p>索引存储结构（indexed storge structure）是指在存储元素信息的同时还建立附加的索引表。索引表中每一项称为索引项，其一般形式为“关键字，地址”，关键词用于标识某个特定元素，地址用于记录该元素的内存地址。通常为了便于查询，索引表中所有索引项是按关键字有序排列的。</p>\n<p><em>优点</em> ：查找效率高</p>\n<p><em>缺点</em> ：建立了索引表，增加了空间开销</p>\n<h4 id=\"哈系或散列存储结构\"><a class=\"markdownIt-Anchor\" href=\"#哈系或散列存储结构\"></a> 哈系（或散列）存储结构</h4>\n<p>哈系存储结构（hashed storge structure）的基本思想是根据元素的关键字通过哈系函数直接计算出一个值，并将这个值作为该元素的存储地址。</p>\n<p><em>优点</em> ：查找速度快，能够对元素进行快速的查找和插入</p>\n<p><em>缺点</em> ：只存储元素的数据，不存储元素之间的逻辑关系（没有简便的方法以任何一种顺序遍历表中的数据项)；基于数组的哈系表，不便于扩展，在数组基本被填满后性能下降得非常严重</p>\n<h3 id=\"数据运算\"><a class=\"markdownIt-Anchor\" href=\"#数据运算\"></a> 数据运算</h3>\n<p>数据运算是指对数据实施的操作。每种数据结构都有一组相应的运算，最常用的运算有检索、插入、删除、更新和排序等。数据运算最终需要在对应的存储结构上以特定的算法实现。</p>\n<p>值得注意的一点是，运算的定义是基于逻辑结构层面，出于人们对解决现实问题的需要抽象出来的特定功能或者方法。运算的实现是基于存储结构层面，是依靠算法对具体的存储单元进行编程操作实现的。</p>\n<p>运算之所有被分为这两种层面，我想，一方面虽然按书上说的“体现了软件工程的思想”，另一方面也导致了程序用户和程序员之间的分裂，使得一般的用户无法接触到程序内部的细节，只能被动地使用程序定义好的功能，而不能主动地凭自己的意见作修改。如果有那么一天，现实计算机的存储方式能够更加适合人类看待问题的方式，在迎合逻辑结构的同时，不再需要结构复杂的算法（才能保证稳定和效率）就能解决所有的问题，那么这里运算的两种层次的分裂将为被弥合。我想，届时人类可以利用计算机做到更多有趣的事情？</p>\n<h3 id=\"数据类型和抽象数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型和抽象数据类型\"></a> 数据类型和抽象数据类型</h3>\n<p>这一部分还是自己在实践中掌握比较好</p>\n<h2 id=\"算法及其描述\"><a class=\"markdownIt-Anchor\" href=\"#算法及其描述\"></a> 算法及其描述</h2>\n<h3 id=\"什么是算法\"><a class=\"markdownIt-Anchor\" href=\"#什么是算法\"></a> 什么是算法？</h3>\n<p>算法（algorithm）是对特定问题求解步骤的一种描述，它是指令有限的序列。其中每条指令代表计算机的一个或者多个操作。</p>\n<p>一个算法应该具有一下5中重要的特性：</p>\n<ol>\n<li>有穷性：一个算法必须在有限步骤内完成。</li>\n<li>确定性：对于每种情况执行的操作的都是确定的，即使说相同的输入总应该有同样的输出。</li>\n<li>可行性：算法可以通过计算机基本操作的有限次组合来完成，否则计算机无法实现。</li>\n<li>有输入：作为算法加工对象的量值，通常体现为一组变量，这是不可或缺的（可能程序员可以不要求任何变量的输入，但一个算法总是有特定加工处理的对象，比如void函数体内部的变量）。</li>\n<li>有输出：作为算法对信息进行处理加工后的结构，一个算法有一个或者多个输出。</li>\n</ol>\n<p><em>算法输入和输出的特定关系构成了算法的功能</em>.</p>\n<h3 id=\"算法设计的目标\"><a class=\"markdownIt-Anchor\" href=\"#算法设计的目标\"></a> 算法设计的目标</h3>\n<ol>\n<li>正确性：算法能够正确地执行预先设定的功能和性能要求。这是最最基本的要求。</li>\n<li>可实用性：要求程序能够方便地被使用，也称为用户友好性。</li>\n<li>可读性：算法应该易于理解，这要求的算法的逻辑必须是清晰的、简单的和结构化的。</li>\n<li>健壮性：要求算法具有较好的容错性，即提供异常处理。</li>\n<li>高性能和低存储需求：要求尽可能节省算法时间和空间的开销。</li>\n</ol>\n<h3 id=\"算法描述\"><a class=\"markdownIt-Anchor\" href=\"#算法描述\"></a> 算法描述</h3>\n<p>简单介绍一下应该是有5种方法，可以用来描述一个确定的算法：</p>\n<ol>\n<li>自然语言：可以直接以通俗形象的语言来描述算法，尽管会丧失一定的严谨准确性。</li>\n<li>流程图：适合顺序、循环结构的算法，不是具有递归结构的算法</li>\n<li>伪代码：结合自然语言和程序语言，比较容易理解。</li>\n<li>程序语言：最直接的描述方法</li>\n<li>调用流程：以程序中函数为单位来描述算法的方法，适合一些复杂工程，也可以用来分析递归算法的成效。</li>\n</ol>\n<h2 id=\"算法分析\"><a class=\"markdownIt-Anchor\" href=\"#算法分析\"></a> 算法分析</h2>\n<h3 id=\"什么是算法分析\"><a class=\"markdownIt-Anchor\" href=\"#什么是算法分析\"></a> 什么是算法分析？</h3>\n<p>算法分析就是分析算法占用计算机资源的多少。而计算机资源主要是CPU时间和内存空间，因此算法分析又分为时间性能分析和空间性能分析。</p>\n<h3 id=\"算法时间性能分析\"><a class=\"markdownIt-Anchor\" href=\"#算法时间性能分析\"></a> 算法时间性能分析</h3>\n<p>一般来说，有两种衡量算法时间性能的方法，即事后统计法和事前估计法。（按字面意思就很好理解）</p>\n<p>而在设计算法的过程最常用的是事前估计的方法，一般我们称之为算法的时间复杂度分析。</p>\n<p>算法的时间复杂度分析一般分为两步（熟练的Oier大概可以之间看出来，<br />\n不过对于涉及递归的算法，分析起来可能有一些困难）：第一步，首先，假设算法的问题规模为n，以程序的每一条语句为单位，为不同类型的语句设定一个耗时量，考虑每条语句的运行次数，最后将这些时间统计起来。如果追求精细，可以了解一下C/C++语言运行赋值语句，声明语句，运算语句的耗时（例如：<code>getchar()</code>, <code>printf()</code>, <code>cin</code>这三类输入语句其实有很大的性能差距，很多OIer为追求几十毫秒的性能，甚至会自己为程序写一个快速读入、输出函数来优化性能）。反之，如果仅仅是粗略分析一下，时间复杂度的量级，可以仅仅统计循环结构中的语句和执行次数并且不考虑不同语句的执行效率一视同仁地记为单位1即可。</p>\n<p>第二步是将计算得到的时间函数 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> 进一步略去其低阶项和常数，仅考虑时间增长趋势的一个上界。例如：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">T(n) = 2n^2 + 2n + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 这是我们可以直接取为 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 。（<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(x))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span> 是同阶无穷大的意思）</p>\n<h3 id=\"算法的空间性能分析\"><a class=\"markdownIt-Anchor\" href=\"#算法的空间性能分析\"></a> 算法的空间性能分析</h3>\n<p>这部分由于书上介绍的比较简单，我也不想再过多介绍。一般，只要熟悉了程序中各个变量的生命（什么时候获取空间，什么时候释放空间），就足够分析清楚算法的空间复杂度了。</p>\n<h2 id=\"数据结构算法程序\"><a class=\"markdownIt-Anchor\" href=\"#数据结构算法程序\"></a> 数据结构+算法=程序</h2>\n<ul>\n<li><a href=\"/2021/10/1238/index.html\">在本书中提到的概念</a></li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"数据结构与算法\"><a class=\"markdownIt-Anchor\" href=\"#数据结构与算法\"></a> 数据结构与算法</h1>\n<h2 id=\"什么是数据结构\"><a class=\"markdownIt-Anchor\" href=\"#什么是数据结构\"></a> 什么是数据结构？</h2>\n<p>要理解数据结构，首先从目的、功能的角度看。计算机要解决一个具体的问题，大致需要经过如下几个步骤：</p>\n<ol>\n<li>分析问题，确定数据模型</li>\n<li>设计相应的算法</li>\n<li>编写程序，运行并调试，直至得到正确的结果</li>\n</ol>\n<p>这里提出了一个概念叫做 <strong>数据模型</strong> 。作为一个数学系应用数学专业的学生，我一个想到的是既然都叫做模型，那么数据模型和数学模型有什么异同呢？</p>\n<p>首先一个最令人困惑的问题是数学、数据，这两个词到底有什么区别？（我最近比较喜欢用这种分析语义语词的方式理解问题）。参考百度上的解释：</p>\n<ul>\n<li><strong>数学</strong> 作为学科，其目的在于研究数量、结构、变化、空间以及信息等概念。作为思维方法，是人类对事物的抽象结构与模式进行严格描述的一种通用手段。</li>\n<li><em>与其说是通用手段，不如说每每当人类将问题给抽象化，特征化，便无可避免地使用（亦或是发明）某种“数学”</em>。</li>\n<li><strong>数据</strong> 作为类，是指对客观事件进行记录并可以鉴别的符号，是对客观事物的逻辑归纳。数据经过加工和处理成为可被解读的信息。</li>\n</ul>","more":"<p>至此，我觉得可以给出一个更加清晰的定义：数学是对世界的抽象化，而数据是对世界的符号化。数学抽象的结果最终表现一整套的数学理论（由公理，命题和论证组成），而数据符号化的结构最终表现为符号以及符号之间关系构成的集合与现实世界的对应关系（如计算机中的二进制mp3文件和播放出来的声音之间的关系）。</p>\n<p>在这本数据结构的教材中，数据的定义更加切实，作者非常直接了当地指出：“<strong>数据是描述客观事物的数和字符组成的集合</strong>，是所有能够被输入到计算机中，且能够被计算机处理的符号的集合”。</p>\n<p>从数据作为集合的概念延展开来，我们不难理解数据集合中的元素称为 <strong>数据项</strong>，数据集合的子集称为 <strong>数据对象</strong>，数据集合上的关系称为 <strong>数据结构</strong> 。</p>\n<p>其中，数据项是保持数据所代表含义的独立性的最小单位，例如一名学生的学号为20192025xxx，不能再进一步拆分处理，否则便会丧失其具体的含义。</p>\n<p>数据对象是保持性质相同的数据元素共同构成的集合。所谓“性质”，一般指的是这个集合中的每个元素对应地描述了一类性质相同对象，而非是在说数据元素本身有什么性质。例如ASCII编码构成的数据对象共同描述了计算机可以表示的符号和形状。</p>\n<p>数据结构是数据集合上的关系。这样的关系往往是人们通过分析现实问题认为建构出来的，与数据本身取值多少可能没有必然联系。</p>\n<p>最后一点，是数据结构的层次问题。通常来讲，数据结构包含着两方面的层次，分别是逻辑结构和存储结构，以刻画数据含义之间的逻辑关系（与具体的问题有关）和数据在计算机电子构件中的存储表示及其关系。任何对数据结构的改动，从某种意义上讲，都可以被称之为数据的 <strong>运算</strong>，由于数据结构的不同层次，运算既可以是更改数据在计算机中的存储关系的各种操作，也可以是对现实事物之间关系的刻画。</p>\n<h3 id=\"逻辑结构及其表示\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构及其表示\"></a> 逻辑结构及其表示</h3>\n<p>在现实世界中数据元素之间关系是多种多样的，但在数据结构中主要讨论数据之间的相邻关系或者邻接关系。</p>\n<h4 id=\"逻辑结构的分类\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构的分类\"></a> 逻辑结构的分类</h4>\n<p>按类型划分，我们对数据的逻辑结构作归纳，无外乎如下几类：</p>\n<dl>\n<dt>1.<strong>集合</strong></dt>\n<dd>集合是指数据元素之间除了属于同一个集合的关系之外，再没有其他关系的集合。</dd>\n<dt>2.<strong>线性结构</strong></dt>\n<dd>线性结构(linear structure)是指该结构中的数据元素之间存在一对一的关系。其特点是除了唯二两个起点和终点仅有一个唯一的前驱（或后继）以外，其余的每一个数据元素均各有一个前驱元素和后继元素。</dd>\n<dt>3.<strong>树形结构</strong></dt>\n<dd>树形结构是指该结构中的数据元素存在一对多的关系，除了为唯一一个顶点没有前驱元素，以及树叶节点没有后继元素外，其余每一d个数据元素均有一个前驱元素以及至少一个后继元素。</dd>\n<dt>4.<strong>图形结构</strong></dt>\n<dd>图形结构是指该结构中数据元素之间存在多对多的关系，每个数据元素的前驱和后继的个数可以使任意的。</dd>\n</dl>\n<h4 id=\"逻辑结构的表示\"><a class=\"markdownIt-Anchor\" href=\"#逻辑结构的表示\"></a> 逻辑结构的表示</h4>\n<dl>\n<dt>（1） 图表表示</dt>\n<dd>图表表示就是直接按顺序编号，把数据项在一张表格中列出来。例如：</dd>\n</dl>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">学号</th>\n<th style=\"text-align:center\">姓名</th>\n<th style=\"text-align:center\">性别</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">张斌</td>\n<td style=\"text-align:center\">男</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">刘丽</td>\n<td style=\"text-align:center\">女</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">34</td>\n<td style=\"text-align:center\">李英</td>\n<td style=\"text-align:center\">女</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">20</td>\n<td style=\"text-align:center\">陈华</td>\n<td style=\"text-align:center\">男</td>\n</tr>\n</tbody>\n</table>\n<dl>\n<dt>（2） 集合（二元组）表示</dt>\n<dd>我们称一个元素集合和一个关系二元关系集合构成一个逻辑结构的二元组，一个二元组的表示如下：</dd>\n</dl>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>B</mi><mo>=</mo><mo stretchy=\"false\">(</mo><mi>D</mi><mo separator=\"true\">,</mo><mi>R</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">B=(D,R)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mclose\">)</span></span></span></span></p>\n<p>其中，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 为数据项构成的集合，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 上的二元关系集合。</p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo>≤</mo><mi>i</mi><mo>≤</mo><mi>n</mi><mo separator=\"true\">,</mo><mi>n</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">D=\\{d\\_i | 1 \\le i \\le n, n \\ge 0 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.79549em;vertical-align:-0.13597em;\"></span><span class=\"mord mathdefault\">i</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi><mo>=</mo><mo stretchy=\"false\">{</mo><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>j</mi><mi mathvariant=\"normal\">∣</mi><mn>1</mn><mo>≤</mo><mi>j</mi><mo>≤</mo><mi>m</mi><mo separator=\"true\">,</mo><mi>m</mi><mo>≥</mo><mn>0</mn><mo stretchy=\"false\">}</mo></mrow><annotation encoding=\"application/x-tex\">R = \\{r\\_j | 1 \\le j \\le m, m \\ge 0 \\}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.06em;vertical-align:-0.31em;\"></span><span class=\"mopen\">{</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mord\">∣</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.05724em;\">j</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≤</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8304100000000001em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\">m</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">≥</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">0</span><span class=\"mclose\">}</span></span></span></span></p>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>d</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">d\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.00444em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\">d</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 表示集合 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中的第 i 个元素，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding=\"application/x-tex\">n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">n</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中元素的个数。<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">r\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9695199999999999em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 表示集合 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>D</mi></mrow><annotation encoding=\"application/x-tex\">D</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">D</span></span></span></span> 中的第i种关系，<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>m</mi></mrow><annotation encoding=\"application/x-tex\">m</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">m</span></span></span></span> 为<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>R</mi></mrow><annotation encoding=\"application/x-tex\">R</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.00773em;\">R</span></span></span></span> 中的关系个数。对于关系集合<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>r</mi><mi mathvariant=\"normal\">_</mi><mi>i</mi></mrow><annotation encoding=\"application/x-tex\">r\\_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.9695199999999999em;vertical-align:-0.31em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord\" style=\"margin-right:0.02778em;\">_</span><span class=\"mord mathdefault\">i</span></span></span></span> 来说，集合中的每一个元素为 \\<x,y\\>, x,y \\in D 代表元素x<br />\n与元素y之间存在相邻关系（&lt;前驱，后继&gt;）。</p>\n<dl>\n<dt>（3）图形表示</dt>\n<dd>简单地用一个圆圈+数字来表示节点，用箭头来表示相邻关系。可以做出如下的图形</dd>\n</dl>\n<p><img src=\"https://picofwwzy-1307689287.cos.ap-shanghai.myqcloud.com/uPic/20211003.png\" alt=\"20211003\" /></p>\n<p>其二元组表示为：</p>\n \\begin{aligned}\n& B = \\{ 25, 36, 48, 57, 64, 82, 75 \\} \\\\ \n& D = \\{ r\\_1, r\\_2 \\} \\\\\n& r\\_1 = \\{ \\<48,25\\>, \\<25,36\\>, \\<48,64\\>, \\<64,57\\>, \\<64,82\\>, \\<82,75\\> \\}\\\\\n& r\\_2 = \\{ \\<25,36\\>, \\<36,48\\>, \\<48,57\\>, \\<57,64\\>, \\<64,75\\>, \\<74,82\\> \\} \n\\end{aligned} \n<h3 id=\"存储结构\"><a class=\"markdownIt-Anchor\" href=\"#存储结构\"></a> 存储结构</h3>\n<p>在实际应用中，数据结构的存储方法是灵活多样的，归纳起来，数据结构中有以下4中常用的存储结构类型。</p>\n<h4 id=\"顺序存储结构\"><a class=\"markdownIt-Anchor\" href=\"#顺序存储结构\"></a> 顺序存储结构</h4>\n<p>顺序存储结构（sequential storage structure）是采用一组连续的存储单元存放所有的数据元素。数据元素不仅在逻辑结构中相邻，由于顺序存储的方式，其在存储其中的存储位置也相邻。</p>\n<p><em>优点</em>：存储效率高，可以实现对元素的随机存取。</p>\n<p><em>缺点</em>：不便于数据修改，对元素的插入和删除操作可能需要移动一系列的元素。</p>\n<h4 id=\"链式存储结构\"><a class=\"markdownIt-Anchor\" href=\"#链式存储结构\"></a> 链式存储结构</h4>\n<p>在链式存储结构（linked storge structure）中，每个逻辑元素单独分配一个内存节点，所有节点的内存地址是间断的，通过每个节点的附加指针连接起来，最终将所有的逻辑元素链接起来。</p>\n<p><em>优点</em> ：方便数据修改（只需要修改前后节点的指针）。</p>\n<p><em>缺点</em> ：不能对存储节点进行随机存取，存储效率相比顺序存储减半。</p>\n<h4 id=\"索引存储结构\"><a class=\"markdownIt-Anchor\" href=\"#索引存储结构\"></a> 索引存储结构</h4>\n<p>索引存储结构（indexed storge structure）是指在存储元素信息的同时还建立附加的索引表。索引表中每一项称为索引项，其一般形式为“关键字，地址”，关键词用于标识某个特定元素，地址用于记录该元素的内存地址。通常为了便于查询，索引表中所有索引项是按关键字有序排列的。</p>\n<p><em>优点</em> ：查找效率高</p>\n<p><em>缺点</em> ：建立了索引表，增加了空间开销</p>\n<h4 id=\"哈系或散列存储结构\"><a class=\"markdownIt-Anchor\" href=\"#哈系或散列存储结构\"></a> 哈系（或散列）存储结构</h4>\n<p>哈系存储结构（hashed storge structure）的基本思想是根据元素的关键字通过哈系函数直接计算出一个值，并将这个值作为该元素的存储地址。</p>\n<p><em>优点</em> ：查找速度快，能够对元素进行快速的查找和插入</p>\n<p><em>缺点</em> ：只存储元素的数据，不存储元素之间的逻辑关系（没有简便的方法以任何一种顺序遍历表中的数据项)；基于数组的哈系表，不便于扩展，在数组基本被填满后性能下降得非常严重</p>\n<h3 id=\"数据运算\"><a class=\"markdownIt-Anchor\" href=\"#数据运算\"></a> 数据运算</h3>\n<p>数据运算是指对数据实施的操作。每种数据结构都有一组相应的运算，最常用的运算有检索、插入、删除、更新和排序等。数据运算最终需要在对应的存储结构上以特定的算法实现。</p>\n<p>值得注意的一点是，运算的定义是基于逻辑结构层面，出于人们对解决现实问题的需要抽象出来的特定功能或者方法。运算的实现是基于存储结构层面，是依靠算法对具体的存储单元进行编程操作实现的。</p>\n<p>运算之所有被分为这两种层面，我想，一方面虽然按书上说的“体现了软件工程的思想”，另一方面也导致了程序用户和程序员之间的分裂，使得一般的用户无法接触到程序内部的细节，只能被动地使用程序定义好的功能，而不能主动地凭自己的意见作修改。如果有那么一天，现实计算机的存储方式能够更加适合人类看待问题的方式，在迎合逻辑结构的同时，不再需要结构复杂的算法（才能保证稳定和效率）就能解决所有的问题，那么这里运算的两种层次的分裂将为被弥合。我想，届时人类可以利用计算机做到更多有趣的事情？</p>\n<h3 id=\"数据类型和抽象数据类型\"><a class=\"markdownIt-Anchor\" href=\"#数据类型和抽象数据类型\"></a> 数据类型和抽象数据类型</h3>\n<p>这一部分还是自己在实践中掌握比较好</p>\n<h2 id=\"算法及其描述\"><a class=\"markdownIt-Anchor\" href=\"#算法及其描述\"></a> 算法及其描述</h2>\n<h3 id=\"什么是算法\"><a class=\"markdownIt-Anchor\" href=\"#什么是算法\"></a> 什么是算法？</h3>\n<p>算法（algorithm）是对特定问题求解步骤的一种描述，它是指令有限的序列。其中每条指令代表计算机的一个或者多个操作。</p>\n<p>一个算法应该具有一下5中重要的特性：</p>\n<ol>\n<li>有穷性：一个算法必须在有限步骤内完成。</li>\n<li>确定性：对于每种情况执行的操作的都是确定的，即使说相同的输入总应该有同样的输出。</li>\n<li>可行性：算法可以通过计算机基本操作的有限次组合来完成，否则计算机无法实现。</li>\n<li>有输入：作为算法加工对象的量值，通常体现为一组变量，这是不可或缺的（可能程序员可以不要求任何变量的输入，但一个算法总是有特定加工处理的对象，比如void函数体内部的变量）。</li>\n<li>有输出：作为算法对信息进行处理加工后的结构，一个算法有一个或者多个输出。</li>\n</ol>\n<p><em>算法输入和输出的特定关系构成了算法的功能</em>.</p>\n<h3 id=\"算法设计的目标\"><a class=\"markdownIt-Anchor\" href=\"#算法设计的目标\"></a> 算法设计的目标</h3>\n<ol>\n<li>正确性：算法能够正确地执行预先设定的功能和性能要求。这是最最基本的要求。</li>\n<li>可实用性：要求程序能够方便地被使用，也称为用户友好性。</li>\n<li>可读性：算法应该易于理解，这要求的算法的逻辑必须是清晰的、简单的和结构化的。</li>\n<li>健壮性：要求算法具有较好的容错性，即提供异常处理。</li>\n<li>高性能和低存储需求：要求尽可能节省算法时间和空间的开销。</li>\n</ol>\n<h3 id=\"算法描述\"><a class=\"markdownIt-Anchor\" href=\"#算法描述\"></a> 算法描述</h3>\n<p>简单介绍一下应该是有5种方法，可以用来描述一个确定的算法：</p>\n<ol>\n<li>自然语言：可以直接以通俗形象的语言来描述算法，尽管会丧失一定的严谨准确性。</li>\n<li>流程图：适合顺序、循环结构的算法，不是具有递归结构的算法</li>\n<li>伪代码：结合自然语言和程序语言，比较容易理解。</li>\n<li>程序语言：最直接的描述方法</li>\n<li>调用流程：以程序中函数为单位来描述算法的方法，适合一些复杂工程，也可以用来分析递归算法的成效。</li>\n</ol>\n<h2 id=\"算法分析\"><a class=\"markdownIt-Anchor\" href=\"#算法分析\"></a> 算法分析</h2>\n<h3 id=\"什么是算法分析\"><a class=\"markdownIt-Anchor\" href=\"#什么是算法分析\"></a> 什么是算法分析？</h3>\n<p>算法分析就是分析算法占用计算机资源的多少。而计算机资源主要是CPU时间和内存空间，因此算法分析又分为时间性能分析和空间性能分析。</p>\n<h3 id=\"算法时间性能分析\"><a class=\"markdownIt-Anchor\" href=\"#算法时间性能分析\"></a> 算法时间性能分析</h3>\n<p>一般来说，有两种衡量算法时间性能的方法，即事后统计法和事前估计法。（按字面意思就很好理解）</p>\n<p>而在设计算法的过程最常用的是事前估计的方法，一般我们称之为算法的时间复杂度分析。</p>\n<p>算法的时间复杂度分析一般分为两步（熟练的Oier大概可以之间看出来，<br />\n不过对于涉及递归的算法，分析起来可能有一些困难）：第一步，首先，假设算法的问题规模为n，以程序的每一条语句为单位，为不同类型的语句设定一个耗时量，考虑每条语句的运行次数，最后将这些时间统计起来。如果追求精细，可以了解一下C/C++语言运行赋值语句，声明语句，运算语句的耗时（例如：<code>getchar()</code>, <code>printf()</code>, <code>cin</code>这三类输入语句其实有很大的性能差距，很多OIer为追求几十毫秒的性能，甚至会自己为程序写一个快速读入、输出函数来优化性能）。反之，如果仅仅是粗略分析一下，时间复杂度的量级，可以仅仅统计循环结构中的语句和执行次数并且不考虑不同语句的执行效率一视同仁地记为单位1即可。</p>\n<p>第二步是将计算得到的时间函数 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>N</mi><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">T(N)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10903em;\">N</span><span class=\"mclose\">)</span></span></span></span> 进一步略去其低阶项和常数，仅考虑时间增长趋势的一个上界。例如：<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>T</mi><mo stretchy=\"false\">(</mo><mi>n</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mn>2</mn><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mn>2</mn><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding=\"application/x-tex\">T(n) = 2n^2 + 2n + 1</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">T</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">n</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.897438em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.72777em;vertical-align:-0.08333em;\"></span><span class=\"mord\">2</span><span class=\"mord mathdefault\">n</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.64444em;vertical-align:0em;\"></span><span class=\"mord\">1</span></span></span></span> 这是我们可以直接取为 <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(n^2)</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">n</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span> 。（<span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>O</mi><mo stretchy=\"false\">(</mo><mi>f</mi><mo stretchy=\"false\">(</mo><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">)</mo></mrow><annotation encoding=\"application/x-tex\">O(f(x))</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">O</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.10764em;\">f</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">)</span></span></span></span> 是同阶无穷大的意思）</p>\n<h3 id=\"算法的空间性能分析\"><a class=\"markdownIt-Anchor\" href=\"#算法的空间性能分析\"></a> 算法的空间性能分析</h3>\n<p>这部分由于书上介绍的比较简单，我也不想再过多介绍。一般，只要熟悉了程序中各个变量的生命（什么时候获取空间，什么时候释放空间），就足够分析清楚算法的空间复杂度了。</p>\n<h2 id=\"数据结构算法程序\"><a class=\"markdownIt-Anchor\" href=\"#数据结构算法程序\"></a> 数据结构+算法=程序</h2>\n<ul>\n<li><a href=\"/2021/10/1238/index.html\">在本书中提到的概念</a></li>\n</ul>"},{"title":"Hello World","date":"2021-09-25T16:00:00.000Z","_content":"\n这篇文章来自Hexo官方的示例文档，快速介绍了hexo的几条常用命令，以及详细介绍它们的链接。我的Blog才刚刚上手，暂时还不知道应不应该把它们删掉，于是就放在在这。如果以后，仔细研究清楚这些命令的作用，说不定会在这里做一些补充。\n\n<!--more-->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/2021/9/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2021-09-26 \n---\n\n这篇文章来自Hexo官方的示例文档，快速介绍了hexo的几条常用命令，以及详细介绍它们的链接。我的Blog才刚刚上手，暂时还不知道应不应该把它们删掉，于是就放在在这。如果以后，仔细研究清楚这些命令的作用，说不定会在这里做一些补充。\n\n<!--more-->\n\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"2021-9-hello-world","published":1,"updated":"2021-10-07T15:31:10.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckuh3z41v0003bc4d8ntzcgp4","content":"<p>这篇文章来自Hexo官方的示例文档，快速介绍了hexo的几条常用命令，以及详细介绍它们的链接。我的Blog才刚刚上手，暂时还不知道应不应该把它们删掉，于是就放在在这。如果以后，仔细研究清楚这些命令的作用，说不定会在这里做一些补充。</p>\n<span id=\"more\"></span>\n<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"<p>这篇文章来自Hexo官方的示例文档，快速介绍了hexo的几条常用命令，以及详细介绍它们的链接。我的Blog才刚刚上手，暂时还不知道应不应该把它们删掉，于是就放在在这。如果以后，仔细研究清楚这些命令的作用，说不定会在这里做一些补充。</p>","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>"},{"title":"概念集","date":"2021-10-02T16:00:00.000Z","_content":"\n# 关于数据结构的一些概念\n\n#### 数据 data\n1. 是描述客观事物的数和字符的集合。\n2. 从计算机的角度来看，数据是所有能被输入到计算机中，且能够被计算机处理的符号的集合，它是计算机操作对象的总称。\n\n#### 数据项 data item\n是具有独立含义的数据的最小单位，也称为字段或者域。例如学生在教务系统中的统计数据就包含了其学号、年级、班级等信息。\n\n#### 数据对象 data object\n是指性质相同的数据元素的集合，它是数据的一个子集。\n\n#### 数据结构 data structure\n是指所有数据元素以及数据元素之间的关系，可以看作是相互之间存在着某种特定关系的数据元素的集合。\n","source":"_posts/2021/10/概念集.md","raw":"---\ntitle: 概念集\ndate: 2021-10-03\ncategories:\n  - 概念集\n  - 数据结构与算法\ntags:\n  - Day day up\n---\n\n# 关于数据结构的一些概念\n\n#### 数据 data\n1. 是描述客观事物的数和字符的集合。\n2. 从计算机的角度来看，数据是所有能被输入到计算机中，且能够被计算机处理的符号的集合，它是计算机操作对象的总称。\n\n#### 数据项 data item\n是具有独立含义的数据的最小单位，也称为字段或者域。例如学生在教务系统中的统计数据就包含了其学号、年级、班级等信息。\n\n#### 数据对象 data object\n是指性质相同的数据元素的集合，它是数据的一个子集。\n\n#### 数据结构 data structure\n是指所有数据元素以及数据元素之间的关系，可以看作是相互之间存在着某种特定关系的数据元素的集合。\n","slug":"概念集","published":1,"updated":"2021-10-07T15:31:10.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckuh3z41x0006bc4dc64h2tmi","content":"<h1 id=\"关于数据结构的一些概念\"><a class=\"markdownIt-Anchor\" href=\"#关于数据结构的一些概念\"></a> 关于数据结构的一些概念</h1>\n<h4 id=\"数据-data\"><a class=\"markdownIt-Anchor\" href=\"#数据-data\"></a> 数据 data</h4>\n<ol>\n<li>是描述客观事物的数和字符的集合。</li>\n<li>从计算机的角度来看，数据是所有能被输入到计算机中，且能够被计算机处理的符号的集合，它是计算机操作对象的总称。</li>\n</ol>\n<h4 id=\"数据项-data-item\"><a class=\"markdownIt-Anchor\" href=\"#数据项-data-item\"></a> 数据项 data item</h4>\n<p>是具有独立含义的数据的最小单位，也称为字段或者域。例如学生在教务系统中的统计数据就包含了其学号、年级、班级等信息。</p>\n<h4 id=\"数据对象-data-object\"><a class=\"markdownIt-Anchor\" href=\"#数据对象-data-object\"></a> 数据对象 data object</h4>\n<p>是指性质相同的数据元素的集合，它是数据的一个子集。</p>\n<h4 id=\"数据结构-data-structure\"><a class=\"markdownIt-Anchor\" href=\"#数据结构-data-structure\"></a> 数据结构 data structure</h4>\n<p>是指所有数据元素以及数据元素之间的关系，可以看作是相互之间存在着某种特定关系的数据元素的集合。</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"关于数据结构的一些概念\"><a class=\"markdownIt-Anchor\" href=\"#关于数据结构的一些概念\"></a> 关于数据结构的一些概念</h1>\n<h4 id=\"数据-data\"><a class=\"markdownIt-Anchor\" href=\"#数据-data\"></a> 数据 data</h4>\n<ol>\n<li>是描述客观事物的数和字符的集合。</li>\n<li>从计算机的角度来看，数据是所有能被输入到计算机中，且能够被计算机处理的符号的集合，它是计算机操作对象的总称。</li>\n</ol>\n<h4 id=\"数据项-data-item\"><a class=\"markdownIt-Anchor\" href=\"#数据项-data-item\"></a> 数据项 data item</h4>\n<p>是具有独立含义的数据的最小单位，也称为字段或者域。例如学生在教务系统中的统计数据就包含了其学号、年级、班级等信息。</p>\n<h4 id=\"数据对象-data-object\"><a class=\"markdownIt-Anchor\" href=\"#数据对象-data-object\"></a> 数据对象 data object</h4>\n<p>是指性质相同的数据元素的集合，它是数据的一个子集。</p>\n<h4 id=\"数据结构-data-structure\"><a class=\"markdownIt-Anchor\" href=\"#数据结构-data-structure\"></a> 数据结构 data structure</h4>\n<p>是指所有数据元素以及数据元素之间的关系，可以看作是相互之间存在着某种特定关系的数据元素的集合。</p>\n"},{"title":"My First Article","date":"2021-09-26T14:56:04.000Z","_content":"\n# 前言\n既然是我博客里的第一篇文章，那我就来摸索一下这里的各种功能好了。\n首先list一下，我的根目录里的npm清单：\n\n\texo-site@0.0.0 /Users/jasmine/jasmines_blog\n\t├── @upupming/hexo-renderer-markdown-it-plus@2.0.2\n\t├── hexo-browsersync@0.3.0\n\t├── hexo-deployer-git@3.0.0\n\t├── hexo-generator-archive@1.0.0\n\t├── hexo-generator-category@1.0.0\n\t├── hexo-generator-feed@3.0.0\n\t├── hexo-generator-index@2.0.0\n\t├── hexo-generator-sitemap@2.1.0\n\t├── hexo-generator-tag@1.0.0\n\t├── hexo-math@4.0.0\n\t├── hexo-renderer-ejs@1.0.0\n\t├── hexo-renderer-jade@0.5.0\n\t├── hexo-renderer-stylus@2.0.1\n\t├── hexo-server@2.0.0\n\t└── hexo@5.4.0\n\n1. `hexo-renderer-markdown-it-plus` 为了写latex重新更换的渲染引擎。之所以要更换，是因为在网上hexo原先的 `hexo-renderer-marked` 引擎，有许多符号会和latex里的符号重复，哪怕下载了支持mathjex的插件写tex 的时候也需要加上许多转义符，故放弃。\n2. `hexo-browsersync` 这个应该是 hexo 自带的一个插件。如同字面意思，这个插件会在你的`hexo server`启动后，当你进行了任何文件上的更改时，实时地在浏览器端口，重新加载新的内容，帮助你实时编辑并查看效果。\n3. `hexo-deployer-git` 这是一个需要手动安装的插件，可以通过 `hexo deploy --git` 命令帮助将hexo生成的静态文件上传至 github page。\n4. `hexo-generator-xxx` 这一块是负责特定页面的生成器，比如archieve就对应 `hexo-generator-archieve`。每个生成器大体作用是在接受到用户端的请求的时候，通过重建路由，更新页面的内容。（官方文档里只有很短的一行字：根据处理后的原始文件建立路由）。\n5. `hexo-renderer-xxx` hexo负责渲染页面的渲染器，大体理解是将markdown里的标记翻译为html的页面。\n6. `hexo-server` 这也是一个需要手动安装的插件，它可以帮助你在本地端口查看编辑好的页面。使用方法是在终端输入 `hexo server` 命令。\n7. `hexo` 本体，提供了`hexo`的核心以及所有的api，更多内容参看官方文档。目前我对node.js和前后端的整体工作流程还没有了解，大概还要很久才能真正掌握这里的内容，理解hexo是如何工作的。\n\n\n","source":"_posts/2021/9/my-new-article.md","raw":"---\ntitle: My First Article\ndate: 2021-09-26 22:56:04\ncategories: \n  - 编程\n  - hexo 配置手册\ntags: \n  - A bored begining\n---\n\n# 前言\n既然是我博客里的第一篇文章，那我就来摸索一下这里的各种功能好了。\n首先list一下，我的根目录里的npm清单：\n\n\texo-site@0.0.0 /Users/jasmine/jasmines_blog\n\t├── @upupming/hexo-renderer-markdown-it-plus@2.0.2\n\t├── hexo-browsersync@0.3.0\n\t├── hexo-deployer-git@3.0.0\n\t├── hexo-generator-archive@1.0.0\n\t├── hexo-generator-category@1.0.0\n\t├── hexo-generator-feed@3.0.0\n\t├── hexo-generator-index@2.0.0\n\t├── hexo-generator-sitemap@2.1.0\n\t├── hexo-generator-tag@1.0.0\n\t├── hexo-math@4.0.0\n\t├── hexo-renderer-ejs@1.0.0\n\t├── hexo-renderer-jade@0.5.0\n\t├── hexo-renderer-stylus@2.0.1\n\t├── hexo-server@2.0.0\n\t└── hexo@5.4.0\n\n1. `hexo-renderer-markdown-it-plus` 为了写latex重新更换的渲染引擎。之所以要更换，是因为在网上hexo原先的 `hexo-renderer-marked` 引擎，有许多符号会和latex里的符号重复，哪怕下载了支持mathjex的插件写tex 的时候也需要加上许多转义符，故放弃。\n2. `hexo-browsersync` 这个应该是 hexo 自带的一个插件。如同字面意思，这个插件会在你的`hexo server`启动后，当你进行了任何文件上的更改时，实时地在浏览器端口，重新加载新的内容，帮助你实时编辑并查看效果。\n3. `hexo-deployer-git` 这是一个需要手动安装的插件，可以通过 `hexo deploy --git` 命令帮助将hexo生成的静态文件上传至 github page。\n4. `hexo-generator-xxx` 这一块是负责特定页面的生成器，比如archieve就对应 `hexo-generator-archieve`。每个生成器大体作用是在接受到用户端的请求的时候，通过重建路由，更新页面的内容。（官方文档里只有很短的一行字：根据处理后的原始文件建立路由）。\n5. `hexo-renderer-xxx` hexo负责渲染页面的渲染器，大体理解是将markdown里的标记翻译为html的页面。\n6. `hexo-server` 这也是一个需要手动安装的插件，它可以帮助你在本地端口查看编辑好的页面。使用方法是在终端输入 `hexo server` 命令。\n7. `hexo` 本体，提供了`hexo`的核心以及所有的api，更多内容参看官方文档。目前我对node.js和前后端的整体工作流程还没有了解，大概还要很久才能真正掌握这里的内容，理解hexo是如何工作的。\n\n\n","slug":"2021-9-my-new-article","published":1,"updated":"2021-10-07T15:31:10.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckuh3z41y0007bc4ddl2z3xr2","content":"<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h1>\n<p>既然是我博客里的第一篇文章，那我就来摸索一下这里的各种功能好了。<br />\n首先list一下，我的根目录里的npm清单：</p>\n<pre><code>exo-site@0.0.0 /Users/jasmine/jasmines_blog\n├── @upupming/hexo-renderer-markdown-it-plus@2.0.2\n├── hexo-browsersync@0.3.0\n├── hexo-deployer-git@3.0.0\n├── hexo-generator-archive@1.0.0\n├── hexo-generator-category@1.0.0\n├── hexo-generator-feed@3.0.0\n├── hexo-generator-index@2.0.0\n├── hexo-generator-sitemap@2.1.0\n├── hexo-generator-tag@1.0.0\n├── hexo-math@4.0.0\n├── hexo-renderer-ejs@1.0.0\n├── hexo-renderer-jade@0.5.0\n├── hexo-renderer-stylus@2.0.1\n├── hexo-server@2.0.0\n└── hexo@5.4.0\n</code></pre>\n<ol>\n<li><code>hexo-renderer-markdown-it-plus</code> 为了写latex重新更换的渲染引擎。之所以要更换，是因为在网上hexo原先的 <code>hexo-renderer-marked</code> 引擎，有许多符号会和latex里的符号重复，哪怕下载了支持mathjex的插件写tex 的时候也需要加上许多转义符，故放弃。</li>\n<li><code>hexo-browsersync</code> 这个应该是 hexo 自带的一个插件。如同字面意思，这个插件会在你的<code>hexo server</code>启动后，当你进行了任何文件上的更改时，实时地在浏览器端口，重新加载新的内容，帮助你实时编辑并查看效果。</li>\n<li><code>hexo-deployer-git</code> 这是一个需要手动安装的插件，可以通过 <code>hexo deploy --git</code> 命令帮助将hexo生成的静态文件上传至 github page。</li>\n<li><code>hexo-generator-xxx</code> 这一块是负责特定页面的生成器，比如archieve就对应 <code>hexo-generator-archieve</code>。每个生成器大体作用是在接受到用户端的请求的时候，通过重建路由，更新页面的内容。（官方文档里只有很短的一行字：根据处理后的原始文件建立路由）。</li>\n<li><code>hexo-renderer-xxx</code> hexo负责渲染页面的渲染器，大体理解是将markdown里的标记翻译为html的页面。</li>\n<li><code>hexo-server</code> 这也是一个需要手动安装的插件，它可以帮助你在本地端口查看编辑好的页面。使用方法是在终端输入 <code>hexo server</code> 命令。</li>\n<li><code>hexo</code> 本体，提供了<code>hexo</code>的核心以及所有的api，更多内容参看官方文档。目前我对node.js和前后端的整体工作流程还没有了解，大概还要很久才能真正掌握这里的内容，理解hexo是如何工作的。</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h1>\n<p>既然是我博客里的第一篇文章，那我就来摸索一下这里的各种功能好了。<br />\n首先list一下，我的根目录里的npm清单：</p>\n<pre><code>exo-site@0.0.0 /Users/jasmine/jasmines_blog\n├── @upupming/hexo-renderer-markdown-it-plus@2.0.2\n├── hexo-browsersync@0.3.0\n├── hexo-deployer-git@3.0.0\n├── hexo-generator-archive@1.0.0\n├── hexo-generator-category@1.0.0\n├── hexo-generator-feed@3.0.0\n├── hexo-generator-index@2.0.0\n├── hexo-generator-sitemap@2.1.0\n├── hexo-generator-tag@1.0.0\n├── hexo-math@4.0.0\n├── hexo-renderer-ejs@1.0.0\n├── hexo-renderer-jade@0.5.0\n├── hexo-renderer-stylus@2.0.1\n├── hexo-server@2.0.0\n└── hexo@5.4.0\n</code></pre>\n<ol>\n<li><code>hexo-renderer-markdown-it-plus</code> 为了写latex重新更换的渲染引擎。之所以要更换，是因为在网上hexo原先的 <code>hexo-renderer-marked</code> 引擎，有许多符号会和latex里的符号重复，哪怕下载了支持mathjex的插件写tex 的时候也需要加上许多转义符，故放弃。</li>\n<li><code>hexo-browsersync</code> 这个应该是 hexo 自带的一个插件。如同字面意思，这个插件会在你的<code>hexo server</code>启动后，当你进行了任何文件上的更改时，实时地在浏览器端口，重新加载新的内容，帮助你实时编辑并查看效果。</li>\n<li><code>hexo-deployer-git</code> 这是一个需要手动安装的插件，可以通过 <code>hexo deploy --git</code> 命令帮助将hexo生成的静态文件上传至 github page。</li>\n<li><code>hexo-generator-xxx</code> 这一块是负责特定页面的生成器，比如archieve就对应 <code>hexo-generator-archieve</code>。每个生成器大体作用是在接受到用户端的请求的时候，通过重建路由，更新页面的内容。（官方文档里只有很短的一行字：根据处理后的原始文件建立路由）。</li>\n<li><code>hexo-renderer-xxx</code> hexo负责渲染页面的渲染器，大体理解是将markdown里的标记翻译为html的页面。</li>\n<li><code>hexo-server</code> 这也是一个需要手动安装的插件，它可以帮助你在本地端口查看编辑好的页面。使用方法是在终端输入 <code>hexo server</code> 命令。</li>\n<li><code>hexo</code> 本体，提供了<code>hexo</code>的核心以及所有的api，更多内容参看官方文档。目前我对node.js和前后端的整体工作流程还没有了解，大概还要很久才能真正掌握这里的内容，理解hexo是如何工作的。</li>\n</ol>\n"},{"title":"致无法忘怀和终将忘却的","date":"2021-10-07T03:26:00.000Z","_content":"\n解构幻想，抱着踏实的实存感纵身跃下，我会落脚在何方呢？\n\n最近，我回味故人往事的时候，常常会试着构想在未来和他们再次相遇的情景。小A成为了知名的模特，小B应该会是一个不错的插画家，小C成为了不眠不休的加班族……如果是小宋的话，他人那么好、幽默风趣，又看得开，应该到哪里都能遇见不错的的人，交上一群无肉不欢的朋友；如果是小方，聪明脑袋做一番大事业应该也不成问题；小九话那么少，大概会遇上某个热情开朗的女生，把整个青春期的苦恼发泄一通，然后有一个幸福的家庭吧。\n\n但是，不会不也有我意想不到的展开。记得，我高中一次校园环跑的途中，大喘气地问了一句，对着平日里一直喜欢打扰我的小鬼，“我问你诶，从小到大这十几年来的人生，你对这个世界有什么想法吗？”他完全不假思索地就问答道：“没有啊，怎么了。”像他这样的，莫名其妙从生活中获得许多又将失去许多的人，会不会在未来的某天突然告诉我答案呢？\n\n或者，某个已经被遗忘到角落的同学，忽然在同学会上听闻到ta的死讯。大家大多都印象不深，只有我一人记得那些斑斑驳驳的对话。随后，只好由我来追逐旧日的线索，还自己一份心安。\n\n那么我呢？这下该轮到我自己了吧。然而，我却一点儿也见不到我的未来：成为一个矜矜业业的上班族（不禁涌起一股恶寒）；成为一个不错的老师（说不定会家长们被排挤）；一辈子旅行，认识许多人，拥有一份份温馨美好的日常（我大概是没有那个经济实力的）；陷入存在主义危机，抑郁症爆发，内分泌失调，英年早逝（好惨)……\n\n在种种的未来里，我似乎要与许多人分道扬镳（因为他们从来不知道我抱着怎样的妄想），我从未想见我该以怎样一副面孔迎上那些我珍惜过，倾诉过这份妄想的人（因为我已经看见将来的艰辛，害怕食言，害怕度过一个又一个悔恨 的年月）。在只有我存在的城市里，在远离所有过往的岁月里，是不是就可以不用面对这些了？\n\n在无法忘怀与终将忘却的时光里，我只能一次又一次进行这样的幻想，仿佛寄往无名氏的信件。直到……\n\n被困意吞没……\n\n明天又是新的一天，如果掉到异世界当我没说。晚安。\n","source":"_posts/2021/10/致无法忘怀和终将忘却的.md","raw":"---\ntitle: 致无法忘怀和终将忘却的\ndate: 2021-10-07 11:26\ncategories:\ntags:\n  - 少年少女的日记\n---\n\n解构幻想，抱着踏实的实存感纵身跃下，我会落脚在何方呢？\n\n最近，我回味故人往事的时候，常常会试着构想在未来和他们再次相遇的情景。小A成为了知名的模特，小B应该会是一个不错的插画家，小C成为了不眠不休的加班族……如果是小宋的话，他人那么好、幽默风趣，又看得开，应该到哪里都能遇见不错的的人，交上一群无肉不欢的朋友；如果是小方，聪明脑袋做一番大事业应该也不成问题；小九话那么少，大概会遇上某个热情开朗的女生，把整个青春期的苦恼发泄一通，然后有一个幸福的家庭吧。\n\n但是，不会不也有我意想不到的展开。记得，我高中一次校园环跑的途中，大喘气地问了一句，对着平日里一直喜欢打扰我的小鬼，“我问你诶，从小到大这十几年来的人生，你对这个世界有什么想法吗？”他完全不假思索地就问答道：“没有啊，怎么了。”像他这样的，莫名其妙从生活中获得许多又将失去许多的人，会不会在未来的某天突然告诉我答案呢？\n\n或者，某个已经被遗忘到角落的同学，忽然在同学会上听闻到ta的死讯。大家大多都印象不深，只有我一人记得那些斑斑驳驳的对话。随后，只好由我来追逐旧日的线索，还自己一份心安。\n\n那么我呢？这下该轮到我自己了吧。然而，我却一点儿也见不到我的未来：成为一个矜矜业业的上班族（不禁涌起一股恶寒）；成为一个不错的老师（说不定会家长们被排挤）；一辈子旅行，认识许多人，拥有一份份温馨美好的日常（我大概是没有那个经济实力的）；陷入存在主义危机，抑郁症爆发，内分泌失调，英年早逝（好惨)……\n\n在种种的未来里，我似乎要与许多人分道扬镳（因为他们从来不知道我抱着怎样的妄想），我从未想见我该以怎样一副面孔迎上那些我珍惜过，倾诉过这份妄想的人（因为我已经看见将来的艰辛，害怕食言，害怕度过一个又一个悔恨 的年月）。在只有我存在的城市里，在远离所有过往的岁月里，是不是就可以不用面对这些了？\n\n在无法忘怀与终将忘却的时光里，我只能一次又一次进行这样的幻想，仿佛寄往无名氏的信件。直到……\n\n被困意吞没……\n\n明天又是新的一天，如果掉到异世界当我没说。晚安。\n","slug":"致无法忘怀和终将忘却的","published":1,"updated":"2021-10-07T15:34:45.804Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckuh3z41y0008bc4d8b62bw9f","content":"<p>解构幻想，抱着踏实的实存感纵身跃下，我会落脚在何方呢？</p>\n<p>最近，我回味故人往事的时候，常常会试着构想在未来和他们再次相遇的情景。小A成为了知名的模特，小B应该会是一个不错的插画家，小C成为了不眠不休的加班族……如果是小宋的话，他人那么好、幽默风趣，又看得开，应该到哪里都能遇见不错的的人，交上一群无肉不欢的朋友；如果是小方，聪明脑袋做一番大事业应该也不成问题；小九话那么少，大概会遇上某个热情开朗的女生，把整个青春期的苦恼发泄一通，然后有一个幸福的家庭吧。</p>\n<p>但是，不会不也有我意想不到的展开。记得，我高中一次校园环跑的途中，大喘气地问了一句，对着平日里一直喜欢打扰我的小鬼，“我问你诶，从小到大这十几年来的人生，你对这个世界有什么想法吗？”他完全不假思索地就问答道：“没有啊，怎么了。”像他这样的，莫名其妙从生活中获得许多又将失去许多的人，会不会在未来的某天突然告诉我答案呢？</p>\n<p>或者，某个已经被遗忘到角落的同学，忽然在同学会上听闻到ta的死讯。大家大多都印象不深，只有我一人记得那些斑斑驳驳的对话。随后，只好由我来追逐旧日的线索，还自己一份心安。</p>\n<p>那么我呢？这下该轮到我自己了吧。然而，我却一点儿也见不到我的未来：成为一个矜矜业业的上班族（不禁涌起一股恶寒）；成为一个不错的老师（说不定会家长们被排挤）；一辈子旅行，认识许多人，拥有一份份温馨美好的日常（我大概是没有那个经济实力的）；陷入存在主义危机，抑郁症爆发，内分泌失调，英年早逝（好惨)……</p>\n<p>在种种的未来里，我似乎要与许多人分道扬镳（因为他们从来不知道我抱着怎样的妄想），我从未想见我该以怎样一副面孔迎上那些我珍惜过，倾诉过这份妄想的人（因为我已经看见将来的艰辛，害怕食言，害怕度过一个又一个悔恨 的年月）。在只有我存在的城市里，在远离所有过往的岁月里，是不是就可以不用面对这些了？</p>\n<p>在无法忘怀与终将忘却的时光里，我只能一次又一次进行这样的幻想，仿佛寄往无名氏的信件。直到……</p>\n<p>被困意吞没……</p>\n<p>明天又是新的一天，如果掉到异世界当我没说。晚安。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>解构幻想，抱着踏实的实存感纵身跃下，我会落脚在何方呢？</p>\n<p>最近，我回味故人往事的时候，常常会试着构想在未来和他们再次相遇的情景。小A成为了知名的模特，小B应该会是一个不错的插画家，小C成为了不眠不休的加班族……如果是小宋的话，他人那么好、幽默风趣，又看得开，应该到哪里都能遇见不错的的人，交上一群无肉不欢的朋友；如果是小方，聪明脑袋做一番大事业应该也不成问题；小九话那么少，大概会遇上某个热情开朗的女生，把整个青春期的苦恼发泄一通，然后有一个幸福的家庭吧。</p>\n<p>但是，不会不也有我意想不到的展开。记得，我高中一次校园环跑的途中，大喘气地问了一句，对着平日里一直喜欢打扰我的小鬼，“我问你诶，从小到大这十几年来的人生，你对这个世界有什么想法吗？”他完全不假思索地就问答道：“没有啊，怎么了。”像他这样的，莫名其妙从生活中获得许多又将失去许多的人，会不会在未来的某天突然告诉我答案呢？</p>\n<p>或者，某个已经被遗忘到角落的同学，忽然在同学会上听闻到ta的死讯。大家大多都印象不深，只有我一人记得那些斑斑驳驳的对话。随后，只好由我来追逐旧日的线索，还自己一份心安。</p>\n<p>那么我呢？这下该轮到我自己了吧。然而，我却一点儿也见不到我的未来：成为一个矜矜业业的上班族（不禁涌起一股恶寒）；成为一个不错的老师（说不定会家长们被排挤）；一辈子旅行，认识许多人，拥有一份份温馨美好的日常（我大概是没有那个经济实力的）；陷入存在主义危机，抑郁症爆发，内分泌失调，英年早逝（好惨)……</p>\n<p>在种种的未来里，我似乎要与许多人分道扬镳（因为他们从来不知道我抱着怎样的妄想），我从未想见我该以怎样一副面孔迎上那些我珍惜过，倾诉过这份妄想的人（因为我已经看见将来的艰辛，害怕食言，害怕度过一个又一个悔恨 的年月）。在只有我存在的城市里，在远离所有过往的岁月里，是不是就可以不用面对这些了？</p>\n<p>在无法忘怀与终将忘却的时光里，我只能一次又一次进行这样的幻想，仿佛寄往无名氏的信件。直到……</p>\n<p>被困意吞没……</p>\n<p>明天又是新的一天，如果掉到异世界当我没说。晚安。</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ckuh3z41t0001bc4d97eedpfx","category_id":"ckuh3z41w0004bc4d45c977to","_id":"ckuh3z422000kbc4dc8b1hini"},{"post_id":"ckuh3z41t0001bc4d97eedpfx","category_id":"ckuh3z420000gbc4d6149ai2d","_id":"ckuh3z422000mbc4dgmsk41a8"},{"post_id":"ckuh3z41x0006bc4dc64h2tmi","category_id":"ckuh3z41z0009bc4d69l5gz1b","_id":"ckuh3z422000nbc4deva8drm9"},{"post_id":"ckuh3z41x0006bc4dc64h2tmi","category_id":"ckuh3z421000ibc4d2akyaz5c","_id":"ckuh3z422000obc4d787n15dm"},{"post_id":"ckuh3z41y0007bc4ddl2z3xr2","category_id":"ckuh3z420000dbc4dcjwe68vi","_id":"ckuh3z422000pbc4dh23ndpl3"},{"post_id":"ckuh3z41y0007bc4ddl2z3xr2","category_id":"ckuh3z422000lbc4dgrr62q4b","_id":"ckuh3z422000qbc4dfgpgar19"}],"PostTag":[{"post_id":"ckuh3z41t0001bc4d97eedpfx","tag_id":"ckuh3z41x0005bc4d7mn40hpc","_id":"ckuh3z420000bbc4dfax5fajg"},{"post_id":"ckuh3z41x0006bc4dc64h2tmi","tag_id":"ckuh3z41x0005bc4d7mn40hpc","_id":"ckuh3z420000ebc4d6clz2i11"},{"post_id":"ckuh3z41y0007bc4ddl2z3xr2","tag_id":"ckuh3z420000cbc4d80z4gun4","_id":"ckuh3z421000hbc4dbj0k8kxx"},{"post_id":"ckuh3z41y0008bc4d8b62bw9f","tag_id":"ckuh3z420000fbc4df37v44gh","_id":"ckuh3z421000jbc4dg84c59dh"}],"Tag":[{"name":"Day day up","_id":"ckuh3z41x0005bc4d7mn40hpc"},{"name":"A bored begining","_id":"ckuh3z420000cbc4d80z4gun4"},{"name":"少年少女的日记","_id":"ckuh3z420000fbc4df37v44gh"}]}}